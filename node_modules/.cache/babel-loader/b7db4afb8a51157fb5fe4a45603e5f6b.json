{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\Pages\\\\ScanBarcode.jsx\";\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport '../Menu.css';\n\nclass scanBarcode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      box: {},\n      submitted: false,\n      boxID: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const _this$state = this.state,\n          boxID = _this$state.boxID,\n          returnUrl = _this$state.returnUrl; // stop here if form is invalid\n\n    if (!boxID) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    this.getBox(boxID).then(response => {\n      this.setState({\n        loading: false\n      });\n    }, error => this.setState({\n      error,\n      loading: false\n    }));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          user = _this$state2.user,\n          box = _this$state2.box,\n          boxID = _this$state2.boxID,\n          submitted = _this$state2.submitted;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Welcome, \", localStorage.getItem('username'))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Scanning Barcode:\"), React.createElement(\"form\", {\n      name: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !boxID ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"boxID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Scan Box Barcode: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"boxID\",\n      value: boxID,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: box,\n      columns: [{\n        Header: \"Box ID\",\n        accessor: \"box_id\"\n      }, {\n        Header: \"Job ID\",\n        accessor: \"job_id\"\n      }, {\n        Header: \"Customer\",\n        accessor: \"customer_name\"\n      }, {\n        Header: \"Location\",\n        accessor: \"box_location\"\n      }, {\n        Header: \"Operator\",\n        accessor: \"box_operator\"\n      }, {\n        Header: \"Step\",\n        accessor: \"box_step\"\n      }, {\n        Header: \"State\",\n        accessor: \"box_state\"\n      }],\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, (state, makeTable) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, makeTable());\n    }))));\n  }\n\n}\n\nexport default scanBarcode;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Pages\\ScanBarcode.jsx"],"names":["React","ReactTable","scanBarcode","Component","constructor","props","state","user","box","submitted","boxID","handleChange","bind","handleSubmit","e","target","name","value","setState","preventDefault","returnUrl","loading","getBox","then","response","error","render","localStorage","getItem","Header","accessor","makeTable"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport '../Menu.css';\r\n\r\nclass scanBarcode extends React.Component{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.state = {\r\n          user: {},\r\n          box:{},\r\n          submitted: false,\r\n          boxID:'',          \r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const { boxID, returnUrl } = this.state;\r\n  \r\n        // stop here if form is invalid\r\n        if (!(boxID))\r\n        {\r\n            return;\r\n        }\r\n  \r\n        this.setState({ loading: true });\r\n        this.getBox(boxID)\r\n        .then(\r\n            response => {\r\n                this.setState({loading: false});\r\n            },\r\n            error => this.setState({ error, loading: false })\r\n        );\r\n    }\r\n\r\n  render(){\r\n    \r\n    const { user, box, boxID, submitted } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"Menu\">\r\n          <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>Welcome, {localStorage.getItem('username')}</p>\r\n          </header>\r\n            <div>\r\n              <h3>Scanning Barcode:</h3>\r\n              <form name=\"form\" onSubmit={this.handleSubmit}>\r\n                <div className={'form-group' + (submitted && !boxID ? ' has-error' : '')}>\r\n                    <label htmlFor=\"boxID\">Scan Box Barcode: </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"boxID\"\r\n                      value={boxID}\r\n                      onChange={this.handleChange} />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div>\r\n            <ReactTable\r\n              data={box}\r\n              columns={[\r\n                {\r\n                  Header: \"Box ID\",\r\n                  accessor: \"box_id\"\r\n                },\r\n                {\r\n                  Header: \"Job ID\",\r\n                  accessor:\"job_id\"\r\n                },\r\n                {\r\n                  Header: \"Customer\",\r\n                  accessor:\"customer_name\"\r\n                },\r\n                {\r\n                  Header: \"Location\",\r\n                  accessor:\"box_location\"\r\n                },\r\n                {\r\n                  Header: \"Operator\",\r\n                  accessor:\"box_operator\"\r\n                },\r\n                {\r\n                  Header: \"Step\",\r\n                  accessor:\"box_step\"\r\n                },\r\n                {\r\n                  Header: \"State\",\r\n                  accessor:\"box_state\"\r\n                }\r\n              ]}\r\n              defaultPageSize={10}\r\n              className=\"-striped -highlight\"\r\n            >\r\n              {(state, makeTable) => {\r\n                  return (\r\n                    <div>\r\n                      {makeTable()}\r\n                    </div>\r\n                  )\r\n                }}\r\n              </ReactTable>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default scanBarcode;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Components\\\\Charts\\\\BoxesCompletedChart.jsx\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst date = new Date();\nconst dateList = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"];\nconst barColour = [\"rgba(113, 205, 205,0.4)\", \"rgba(113, 205, 205, 1)\", \"rgba(255, 134,159,0.4)\", \"rgba(255, 134, 159, 1)\"];\n\nclass ChartsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBar: {\n        labels: this.currentDateList(),\n        datasets: [{\n          label: \"Boxes completed in \" + monthNames[date.getMonth() - 1],\n          data: [12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3],\n          backgroundColor: barColour[0],\n          borderWidth: 2,\n          borderColor: barColour[1]\n        }, {\n          label: \"Boxes completed in \" + monthNames[date.getMonth() - 2],\n          data: [10, 16, 3, 7, 4, 3, 3, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3, 7],\n          backgroundColor: barColour[2],\n          borderWidth: 2,\n          borderColor: barColour[3]\n        }]\n      },\n      barChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  currentDateList() {\n    let dates = dateList;\n    let a = date.getMonth() - 1;\n\n    if (a == 3 || a == 5 || a == 7 || a == 9 || a == 11) {\n      dates[28] = \"29\";\n      dates[29] = \"30\";\n    }\n\n    if (a == (a == 0 || a == 2 || a == 4 || a == 6 || a == 8 || a == 10)) {\n      dates[28] = \"29\";\n      dates[29] = \"30\";\n      dates[30] = \"31\";\n    }\n\n    return dates;\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, monthNames[date.getMonth() - 1] + \" \", \"Box Report\"), React.createElement(Bar, {\n      data: this.state.dataBar,\n      options: this.state.barChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartsPage;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Components\\Charts\\BoxesCompletedChart.jsx"],"names":["React","Bar","MDBContainer","monthNames","date","Date","dateList","barColour","ChartsPage","Component","state","dataBar","labels","currentDateList","datasets","label","getMonth","data","backgroundColor","borderWidth","borderColor","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","dates","a","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const date = new Date();\r\nconst dateList = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\r\n\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\"]\r\nconst barColour = [\"rgba(113, 205, 205,0.4)\",\"rgba(113, 205, 205, 1)\",\"rgba(255, 134,159,0.4)\",\"rgba(255, 134, 159, 1)\"]\r\nclass ChartsPage extends React.Component {\r\n    currentDateList()\r\n    {\r\n        let dates = dateList\r\n        let a = date.getMonth()-1\r\n        if((a==3)||(a==5)||(a==7)||(a==9)||(a==11))\r\n        {\r\n            dates[28]=\"29\"\r\n            dates[29]=\"30\"\r\n        }\r\n        if(a==((a==0)||(a==2)||(a==4)||(a==6)||(a==8)||(a==10)))\r\n        {\r\n            dates[28]=\"29\"\r\n            dates[29]=\"30\"\r\n            dates[30]=\"31\"\r\n        }\r\n        \r\n        return dates\r\n    }\r\n  state = {\r\n    dataBar: {\r\n      labels: this.currentDateList(),\r\n      datasets: [\r\n        {\r\n          label: \"Boxes completed in \"+monthNames[date.getMonth()-1],\r\n          data: [12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3, 12, 19, 3, 5, 2, 3],\r\n          backgroundColor: barColour[0],\r\n          borderWidth: 2,\r\n          borderColor: barColour[1],\r\n        },\r\n        {\r\n            label: \"Boxes completed in \"+monthNames[date.getMonth()-2],\r\n            data: [10, 16, 3, 7, 4, 3, 3, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3, 10, 16, 3, 7, 4, 3,7],\r\n            backgroundColor: barColour[2],\r\n            borderWidth: 2,\r\n            borderColor: barColour[3],\r\n          }\r\n      ]\r\n    },\r\n    barChartOptions: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            barPercentage: 1,\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            },\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">{monthNames[date.getMonth()-1]+\" \"}Box Report</h3>\r\n        <Bar data={this.state.dataBar} options={this.state.barChartOptions} />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPage;"]},"metadata":{},"sourceType":"module"}
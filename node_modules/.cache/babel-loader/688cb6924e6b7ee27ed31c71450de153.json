{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\ViewCustomers.jsx\";\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport '../customers.css';\nimport '../index.css';\nimport '../Menu.css';\nconst JSONtheme = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\n\nclass ViewCustomers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customers: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getCustomers();\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const customers = this.state.customers;\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker - View Customers\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(ReactTable, {\n      getTrGroupProps: (state, rowInfo) => {\n        if (rowInfo !== undefined) {\n          return {\n            onClick: () => {\n              var path = \"/customer/\" + rowInfo.row.customer_id;\n              this.props.history.push(path);\n            },\n            style: {\n              cursor: 'pointer',\n              background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\n              color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\n            }\n          };\n        }\n      },\n      data: customers,\n      columns: [{\n        Header: \"Customer ID\",\n        accessor: \"customer_id\"\n      }, {\n        Header: \"Customer Name\",\n        accessor: \"customer_name\"\n      }],\n      filterable: true,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, (state, makeTable) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, makeTable());\n    }));\n  }\n\n  getCustomers() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(\"http://localhost:52773/BoxTracker/customers\", requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          customers: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewCustomers;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\ViewCustomers.jsx"],"names":["React","ReactTable","Header","HeaderLinks","Toolbar","JSONtheme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","ViewCustomers","Component","constructor","props","params","state","user","customers","loading","handleChange","bind","componentWillMount","getCustomers","e","target","name","value","setState","render","rest","rowInfo","undefined","onClick","path","row","customer_id","history","push","style","cursor","background","original","id","selectedIndex","color","accessor","makeTable","requestOptions","method","headers","fetch","then","handleGetResponse","response","text","data","JSON","parse","ok","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport '../customers.css';\r\nimport '../index.css';\r\nimport '../Menu.css';\r\n\r\nconst JSONtheme = {\r\n  scheme: 'monokai',\r\n  author: 'wimer hazenberg (http://www.monokai.nl)',\r\n  base00: '#272822',\r\n  base01: '#383830',\r\n  base02: '#49483e',\r\n  base03: '#75715e',\r\n  base04: '#a59f85',\r\n  base05: '#f8f8f2',\r\n  base06: '#f5f4f1',\r\n  base07: '#f9f8f5',\r\n  base08: '#f92672',\r\n  base09: '#fd971f',\r\n  base0A: '#f4bf75',\r\n  base0B: '#a6e22e',\r\n  base0C: '#a1efe4',\r\n  base0D: '#66d9ef',\r\n  base0E: '#ae81ff',\r\n  base0F: '#cc6633'\r\n}\r\n\r\nclass ViewCustomers extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customers: [],\r\n          loading: false,\r\n          \r\n      };\r\n    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentWillMount()\r\n  {\r\n    this.getCustomers()\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n  render(){\r\n    const {  customers } = this.state\r\n    const { ...rest } = this.props;\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <Header\r\n                absolute\r\n                fixed\r\n                color=\"dark\"\r\n                brand=\"Box Tracker - View Customers\"\r\n                rightLinks={<HeaderLinks />}\r\n                {...rest}\r\n            />\r\n            <Toolbar/>\r\n          <ReactTable\r\n\r\n        getTrGroupProps={(state, rowInfo) => {\r\n        if (rowInfo !== undefined) {\r\n          return {\r\n              onClick: () => {\r\n                var path = \"/customer/\"+rowInfo.row.customer_id\r\n                this.props.history.push(path);\r\n              },\r\n              style: {\r\n                  cursor: 'pointer',\r\n                  background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\r\n                  color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\r\n                          }\r\n                      }\r\n                }}\r\n            }\r\n\r\n          data={customers}\r\n          columns={[\r\n            {\r\n              Header: \"Customer ID\",\r\n              accessor: \"customer_id\"\r\n            },\r\n            {\r\n              Header: \"Customer Name\",\r\n              accessor:\"customer_name\"\r\n            }\r\n          ]}\r\n          filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n           {(state, makeTable) => {\r\n              return (\r\n                <div>\r\n                  {makeTable()}\r\n                </div>\r\n              )\r\n            }}\r\n          </ReactTable>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    getCustomers()\r\n{\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(\"http://localhost:52773/BoxTracker/customers\", requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n                this.setState({customers: response});\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n  return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n      }\r\n      return data;\r\n  });\r\n}\r\n  }\r\n  \r\n\r\nexport default ViewCustomers;\r\n"]},"metadata":{},"sourceType":"module"}
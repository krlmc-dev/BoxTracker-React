{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\Preparation.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTable from 'react-table';\nimport { Button, TextField } from '@material-ui/core';\nimport { Route, Link, HashRouter } from 'react-router-dom';\nimport \"react-table/react-table.css\";\nimport JSONTree from 'react-json-tree';\nimport '../Menu.css';\nimport '../customers.css';\nconst JSONtheme = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\n\nclass Preparation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      box: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderEditable = this.renderEditable.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBox(this.props.match.params.id);\n    ReactDOM.findDOMNode(this.refs.focusButton).focus();\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  renderEditable(cellInfo) {\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"black\"\n      },\n      contentEditable: true,\n      suppressContentEditableWarning: true,\n      onBlur: e => {\n        const box = [...this.state.box];\n        box[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n        this.setState({\n          box\n        });\n      },\n      dangerouslySetInnerHTML: {\n        __html: this.state.box[cellInfo.index][cellInfo.column.id]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          vBox = _this$state.vBox,\n          boxID = _this$state.boxID,\n          loading = _this$state.loading;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Preparation\")), React.createElement(ReactTable, {\n      data: vBox,\n      columns: [{\n        Header: \"Box\",\n        columns: [{\n          accessor: \"Property\"\n        }, {\n          accessor: \"Value\"\n        }]\n      }],\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, (state, makeTable, instance) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, makeTable());\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Button, {\n      ref: \"focusButton\",\n      variant: \"contained\",\n      color: \"white\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Completed\")));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getBox(boxID) {\n    if (boxID == \"$36\") {\n      boxID = 6;\n    } //alert(boxID)\n    //boxID = 6\n\n\n    var path = \"http://localhost:52773/BoxTracker/boxes/\" + boxID; //TEMPORARY\n    //jobID = \"1\"\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        let vBox = this.getVertical(response);\n        this.setState({\n          vBox: vBox,\n          box: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  getVertical(vBox) {\n    let newBox = [];\n    vBox.map((data, i) => {\n      newBox = [{\n        \"Property\": \"Box ID\",\n        \"Value\": data.box_id\n      }, {\n        \"Property\": \"Job ID\",\n        \"Value\": data.job_id\n      }, {\n        \"Property\": \"Customer\",\n        \"Value\": data.customer_name\n      }, {\n        \"Property\": \"Location\",\n        \"Value\": data.box_location\n      }, {\n        \"Property\": \"Operator\",\n        \"Value\": data.box_operator\n      }, {\n        \"Property\": \"State\",\n        \"Value\": data.box_state\n      }, {\n        \"Property\": \"Step\",\n        \"Value\": data.box_step\n      }, {\n        \"Property\": \"Dispatch\",\n        \"Value\": data.job_dispatch\n      }];\n    });\n    return newBox;\n  }\n\n  updateBox() {\n    const box = this.state.box;\n    box.map((data, i) => {\n      let tBox = {\n        box_location: data.box_location,\n        box_step: data.box_step,\n        box_state: data.box_state\n      };\n      alert(\"Box Updated: \" + JSON.stringify(tBox));\n    });\n  }\n\n  completeStep() {\n    alert(\"Completed\");\n    var path = \"/boxes\";\n    this.props.history.push(path);\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default Preparation;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\Preparation.jsx"],"names":["React","ReactDOM","ReactTable","Button","TextField","Route","Link","HashRouter","JSONTree","JSONtheme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","Preparation","Component","constructor","props","params","state","user","box","loading","handleChange","bind","handleSubmit","renderEditable","componentDidMount","getBox","match","id","findDOMNode","refs","focusButton","focus","e","target","name","value","setState","preventDefault","cellInfo","backgroundColor","index","column","innerHTML","__html","render","vBox","boxID","menuStyle","margin","padding","height","overflow","customerStyle","Header","columns","accessor","makeTable","instance","handleClickOpen","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","getVertical","newBox","map","data","i","box_id","job_id","customer_name","box_location","box_operator","box_state","box_step","job_dispatch","updateBox","tBox","alert","JSON","stringify","completeStep","history","push","handleResponse","text","parse","ok","status","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTable from 'react-table';\r\nimport { Button, TextField}\r\n from '@material-ui/core';\r\nimport { Route, Link, HashRouter} from 'react-router-dom';\r\nimport \"react-table/react-table.css\";\r\nimport JSONTree from 'react-json-tree'\r\nimport '../Menu.css';\r\nimport '../customers.css';\r\n\r\nconst JSONtheme = {\r\n  scheme: 'monokai',\r\n  author: 'wimer hazenberg (http://www.monokai.nl)',\r\n  base00: '#272822',\r\n  base01: '#383830',\r\n  base02: '#49483e',\r\n  base03: '#75715e',\r\n  base04: '#a59f85',\r\n  base05: '#f8f8f2',\r\n  base06: '#f5f4f1',\r\n  base07: '#f9f8f5',\r\n  base08: '#f92672',\r\n  base09: '#fd971f',\r\n  base0A: '#f4bf75',\r\n  base0B: '#a6e22e',\r\n  base0C: '#a1efe4',\r\n  base0D: '#66d9ef',\r\n  base0E: '#ae81ff',\r\n  base0F: '#cc6633'\r\n}\r\n\r\nclass Preparation extends React.Component{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          box: [],\r\n          loading: false\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.renderEditable = this.renderEditable.bind(this);\r\n  }\r\n  componentDidMount()\r\n  {\r\n      this.getBox(this.props.match.params.id)\r\n      ReactDOM.findDOMNode(this.refs.focusButton).focus();\r\n  }\r\n\r\n  handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      \r\n    }\r\n    \r\n\r\n    renderEditable(cellInfo) {\r\n        return (\r\n          <div\r\n            style={{ backgroundColor: \"black\" }}\r\n            contentEditable\r\n            suppressContentEditableWarning\r\n            onBlur={e => {\r\n              const box = [...this.state.box];\r\n              box[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n              this.setState({ box });\r\n            }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: this.state.box[cellInfo.index][cellInfo.column.id]\r\n            }}\r\n          />\r\n        );\r\n      }\r\n  render(){\r\n    const { vBox, boxID, loading} = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n        margin: 'auto',\r\n        padding: 20,\r\n        overflow: 'auto',\r\n      };\r\n    \r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>Preparation</p>\r\n          </header>\r\n          <ReactTable \r\n          data={vBox}\r\n          columns={[\r\n            {\r\n              Header: \"Box\",\r\n              columns: [\r\n                {\r\n                  accessor: \"Property\"\r\n                },\r\n                {\r\n                  accessor: \"Value\"\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n           {(state, makeTable, instance) => {\r\n              return (\r\n                <div>\r\n                  {makeTable()}\r\n                </div>\r\n              )\r\n            }}\r\n          </ReactTable>\r\n          <div>\r\n              <Button ref=\"focusButton\" variant=\"contained\" color=\"white\" onClick={this.handleClickOpen}> Completed</Button>\r\n              \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n///\r\n/// HTTP GET/POST METHODS\r\n///\r\ngetBox(boxID)\r\n{\r\n    if(boxID==\"$36\"){boxID=6}\r\n    //alert(boxID)\r\n    //boxID = 6\r\n    var path = \"http://localhost:52773/BoxTracker/boxes/\"+boxID\r\n    //TEMPORARY\r\n    //jobID = \"1\"\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(path, requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n              //alert(JSON.stringify(response))\r\n              let vBox = this.getVertical(response)\r\n              this.setState({\r\n                  vBox : vBox,\r\n                  box : response\r\n              })\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\ngetVertical(vBox)\r\n{\r\n    let newBox = []\r\n    vBox.map((data, i) => {\r\n        newBox = [\r\n            {\"Property\": \"Box ID\",\r\n             \"Value\": data.box_id},\r\n             {\"Property\": \"Job ID\",\r\n             \"Value\": data.job_id},\r\n             {\"Property\": \"Customer\",\r\n             \"Value\": data.customer_name},\r\n             {\"Property\": \"Location\",\r\n             \"Value\": data.box_location},\r\n             {\"Property\": \"Operator\",\r\n             \"Value\": data.box_operator},\r\n             {\"Property\": \"State\",\r\n             \"Value\": data.box_state},\r\n             {\"Property\": \"Step\",\r\n             \"Value\": data.box_step},\r\n             {\"Property\": \"Dispatch\",\r\n             \"Value\": data.job_dispatch}\r\n        ]\r\n    })\r\n    return newBox\r\n}\r\n\r\nupdateBox()\r\n{\r\n    const {box} = this.state\r\n    box.map((data, i) => {\r\n      let tBox = {\r\n        box_location : data.box_location,\r\n        box_step : data.box_step,\r\n        box_state : data.box_state\r\n      }\r\n      alert(\"Box Updated: \"+JSON.stringify(tBox))\r\n    })\r\n}\r\n\r\ncompleteStep()\r\n{\r\n    alert(\"Completed\")\r\n    var path = \"/boxes\"\r\n    this.props.history.push(path);\r\n}\r\n\r\nhandleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n  }\r\n  \r\n\r\nexport default Preparation;\r\n"]},"metadata":{},"sourceType":"module"}
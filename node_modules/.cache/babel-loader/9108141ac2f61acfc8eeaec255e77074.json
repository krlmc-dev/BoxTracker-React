{"ast":null,"code":"export const customerService = {\n  addCustomer,\n  getCustomers,\n  getCustomerByID\n};\n\nfunction addCustomer(customer_name) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n    },\n    body: JSON.stringify({\n      'customer_name': customer_name\n    })\n  };\n  return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions).then(handleResponse).then(response => {\n    if (response) {\n      alert(\"Customer Successfully Created\");\n    }\n\n    return response;\n  });\n}\n\nfunction getCustomers() {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n    }\n  };\n  return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions).then(handleGetResponse).then(response => {\n    if (response) {\n      localStorage.setItem('customers', JSON.stringify(response));\n    }\n\n    return response;\n  });\n}\n\nfunction getCustomerByID(customerID) {\n  customerID = '29';\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n    }\n  };\n  return fetch(\"http://localhost:52773/csp/BoxTracker/customer/{customerID}\", requestOptions).then(handleGetResponse).then(response => {\n    if (response) {\n      let CustomerDetails = JSON.parse(JSON.stringify(response));\n      alert(CustomerDetails[1]);\n      localStorage.setItem('customer', JSON.stringify(response));\n    }\n\n    return response;\n  });\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n        Location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nfunction handleGetResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nexport default customerService;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Services\\customerService.js"],"names":["customerService","addCustomer","getCustomers","getCustomerByID","customer_name","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","response","alert","handleGetResponse","localStorage","setItem","customerID","CustomerDetails","parse","text","data","ok","status","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["export const customerService = {\r\n    addCustomer,\r\n    getCustomers,\r\n    getCustomerByID\r\n}\r\n\r\nfunction addCustomer(customer_name)\r\n{\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            },\r\n        body: JSON.stringify({'customer_name': customer_name})\r\n        };\r\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions)\r\n    .then(handleResponse).then(response => {\r\n            if(response)\r\n            {   \r\n                alert(\"Customer Successfully Created\")\r\n            }\r\n            return response;\r\n        }\r\n    )\r\n        \r\n}\r\n\r\nfunction getCustomers()\r\n{\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions)\r\n        .then(handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n                localStorage.setItem('customers', JSON.stringify(response));\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nfunction getCustomerByID(customerID)\r\n{\r\n    customerID = '29'\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customer/{customerID}\", requestOptions)\r\n        .then(handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n                let CustomerDetails = JSON.parse(JSON.stringify(response))\r\n                alert(CustomerDetails[1])\r\n                localStorage.setItem('customer', JSON.stringify(response));\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nfunction handleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\nexport default customerService;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\Pages\\\\ViewCustomer.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JsonToTable } from \"react-json-to-table\"; //import customerService from '../Services/customerService';\n\nimport UserMenu from './UserMenu';\nimport Menu, { Item as MenuItem } from 'rc-menu';\nimport '../Menu.css';\nimport '../customers.css';\n\nclass ViewCustomer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customer: [],\n      customerJobs: [],\n      jobs: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomerByID(this.props.location.pathname);\n  }\n\n  routeMenu() {\n    ReactDOM.render(React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          customer = _this$state.customer,\n          customerJobs = _this$state.customerJobs;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"View Customer\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, customer.map((data, i) => {\n      return React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"ID: \", data.ID), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Name: \", data.Name), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Email: \", data.Email)));\n    })), React.createElement(Menu, {\n      style: menuStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, customerJobs.map((data, i) => {\n      return React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Job ID: \", data.ID)));\n    })));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  addCustomer(customer_name) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      },\n      body: JSON.stringify({\n        'customer_name': customer_name\n      })\n    };\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions).then(this.handleResponse).then(response => {\n      if (response) {\n        alert(\"Customer Successfully Created\");\n      }\n\n      return response;\n    });\n  }\n\n  getCustomerByID(customerID) {\n    var path = \"http://localhost:52773/csp/BoxTracker\" + customerID;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        let CustomerReturn = JSON.parse(JSON.stringify(response));\n        let CDetails = [];\n        CDetails[0] = CustomerReturn[0];\n        this.setState({\n          customer: CDetails,\n          customerJobs: CustomerReturn[1]\n        }); //localStorage.setItem('customer', CustomerDetails);\n        //localStorage.setItem('customerJobs', CustomerJobs)\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewCustomer;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Pages\\ViewCustomer.jsx"],"names":["React","ReactDOM","JsonToTable","UserMenu","Menu","Item","MenuItem","ViewCustomer","Component","constructor","props","params","state","user","customer","customerJobs","jobs","loading","handleChange","bind","componentDidMount","getCustomerByID","location","pathname","routeMenu","render","document","getElementById","e","target","name","value","setState","menuStyle","margin","padding","height","overflow","customerStyle","map","data","i","ID","Name","Email","addCustomer","customer_name","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","response","alert","customerID","path","handleGetResponse","CustomerReturn","parse","CDetails","text","ok","status","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JsonToTable } from \"react-json-to-table\";\r\n//import customerService from '../Services/customerService';\r\nimport UserMenu from './UserMenu';\r\nimport Menu, {Item as MenuItem} from 'rc-menu';\r\nimport '../Menu.css';\r\nimport '../customers.css';\r\n\r\nclass ViewCustomer extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customer: [],\r\n          customerJobs: [],\r\n          jobs: [],\r\n          loading: false\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.getCustomerByID(this.props.location.pathname)\r\n  }\r\n  \r\n\r\n  routeMenu() {\r\n    ReactDOM.render(<UserMenu />, document.getElementById('root'))\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n\r\n  render(){\r\n    const { customer, customerJobs } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n        margin: 'auto',\r\n        padding: 20,\r\n        overflow: 'auto',\r\n      };\r\n    \r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>View Customer</p>\r\n          </header>\r\n            <div className = 'content'>\r\n              {customer.map((data, i) => {\r\n                  return (\r\n                    <table align='center'>\r\n                        <tr key={i}>\r\n                          <td className='link'>ID: {data.ID}</td>\r\n                          <td className='link'>Name: {data.Name}</td>\r\n                          <td className='link'>Email: {data.Email}</td>\r\n                        </tr>\r\n                    </table>\r\n                  )})\r\n                  }\r\n              </div>\r\n              <Menu style={menuStyle}>\r\n                {customerJobs.map((data, i) => {\r\n                    return (\r\n                      <table align='center'>\r\n                          <tr key={i}>\r\n                            <td className='link'>Job ID: {data.ID}</td>\r\n                          </tr>\r\n                      </table>\r\n                    )})\r\n                    }\r\n              </Menu>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n///\r\n/// HTTP GET/POST METHODS\r\n///\r\n    addCustomer(customer_name)\r\n{\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            },\r\n        body: JSON.stringify({'customer_name': customer_name})\r\n        };\r\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions)\r\n    .then(this.handleResponse).then(response => {\r\n            if(response)\r\n            {   \r\n                alert(\"Customer Successfully Created\")\r\n            }\r\n            return response;\r\n        }\r\n    )\r\n        \r\n}\r\n\r\n\r\n\r\ngetCustomerByID(customerID)\r\n{\r\n    var path = \"http://localhost:52773/csp/BoxTracker\"+customerID\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    \r\n    return fetch(path, requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n                let CustomerReturn = JSON.parse(JSON.stringify(response))\r\n                let CDetails = []\r\n                CDetails[0]=CustomerReturn[0]\r\n                this.setState({\r\n                    customer: CDetails,\r\n                    customerJobs: CustomerReturn[1]\r\n                })\r\n                //localStorage.setItem('customer', CustomerDetails);\r\n                //localStorage.setItem('customerJobs', CustomerJobs)\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nhandleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n  }\r\n  \r\n\r\nexport default ViewCustomer;\r\n"]},"metadata":{},"sourceType":"module"}
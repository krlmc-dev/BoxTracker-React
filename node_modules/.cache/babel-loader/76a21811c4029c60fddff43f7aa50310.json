{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\Dashboard.jsx\";\n//core React imports\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport Chart from 'react-google-charts'; //@material-react imports\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //App imports\n\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport ContinueDialogue from './ContinueDialogue'; //css imports\n\nimport \"react-table/react-table.css\";\nimport '../customers.css';\nimport '../Menu.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  }\n}));\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      boxes: [],\n      avg: [],\n      loading: false,\n      go: false,\n      show: false,\n      isShown: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\n    this.getBox();\n    this.getAvg();\n  }\n\n  componentDidUpdate() {}\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      value: \"\",\n      go: true\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    const data = [[\"Element\", \"Density\", {\n      role: \"style\"\n    }], [\"Copper\", 8.94, \"#b87333\"], // RGB value\n    [\"Silver\", 10.49, \"silver\"], // English color name\n    [\"Gold\", 19.3, \"gold\"], [\"Platinum\", 21.45, \"color: #e5e4e2\"] // CSS-style declaration\n    ];\n    const _this$state = this.state,\n          show = _this$state.show,\n          isShown = _this$state.isShown,\n          boxes = _this$state.boxes,\n          avg = _this$state.avg,\n          boxID = _this$state.boxID;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      classname: useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, show && React.createElement(ContinueDialogue, {\n      onClick: e => {\n        this.setState({\n          show: false\n        });\n        alert(e.currentTarget.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Average Job Completion Time:\", avg.map((data, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, data.average_job_length);\n    })), React.createElement(Paper, {\n      className: useStyles.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      width: '500px',\n      height: '300px',\n      chartType: \"BarChart\",\n      loader: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Loading Chart\"),\n      data: data,\n      options: {\n        // Material design options\n        chart: {\n          title: 'Company Performance',\n          subtitle: 'Sales, Expenses, and Profit: 2014-2017'\n        }\n      } // For tests\n      ,\n      rootProps: {\n        'data-testid': '2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))))));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getBox() {\n    //alert(boxID)\n    //boxID = 6\n    var path = \"http://localhost:52773/BoxTracker/boxes\"; //TEMPORARY\n    //jobID = \"1\"\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        this.setState({\n          boxes: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  getAvg() {\n    var path = \"http://localhost:52773/BoxTracker/stats\";\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          avg: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\Dashboard.jsx"],"names":["React","ReactTable","Chart","Toolbar","makeStyles","Grid","Paper","Header","HeaderLinks","ContinueDialogue","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","Dashboard","Component","constructor","props","params","state","user","boxes","avg","loading","go","show","isShown","handleChange","bind","handleSubmit","componentDidMount","getBox","getAvg","componentDidUpdate","e","setState","value","target","preventDefault","render","data","role","boxID","menuStyle","height","overflow","customerStyle","rest","alert","currentTarget","id","map","i","average_job_length","chart","title","subtitle","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","handleResponse","text","JSON","parse","ok","status","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["//core React imports\r\nimport React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport Chart from 'react-google-charts';\r\n//@material-react imports\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n//App imports\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport ContinueDialogue from './ContinueDialogue';\r\n//css imports\r\nimport \"react-table/react-table.css\";\r\nimport '../customers.css';\r\nimport '../Menu.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  }\r\n}))\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.params = {};\r\n    this.state = {\r\n      user: {},\r\n      boxes: [],\r\n      avg: [],\r\n      loading: false,\r\n      go: false,\r\n      show: false,\r\n      isShown: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\r\n    this.getBox()\r\n    this.getAvg()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({\r\n      value: \"\",\r\n      go: true\r\n    })\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const data = [\r\n      [\"Element\", \"Density\", { role: \"style\" }],\r\n      [\"Copper\", 8.94, \"#b87333\"], // RGB value\r\n      [\"Silver\", 10.49, \"silver\"], // English color name\r\n      [\"Gold\", 19.3, \"gold\"],\r\n      [\"Platinum\", 21.45, \"color: #e5e4e2\"] // CSS-style declaration\r\n    ];\r\n    const { show, isShown, boxes, avg, boxID } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n      // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n      margin: 'auto',\r\n      padding: 20,\r\n      overflow: 'auto',\r\n    };\r\n    const { ...rest } = this.props;\r\n    return (\r\n      <div classname={useStyles.root}>\r\n        <div className=\"Menu\">\r\n          {show && <ContinueDialogue onClick={(e) => {\r\n            this.setState({ show: false })\r\n            alert(e.currentTarget.id)\r\n          }} />}\r\n          <Header\r\n            absolute\r\n            fixed\r\n            color=\"dark\"\r\n            brand=\"Box Tracker\"\r\n            rightLinks={<HeaderLinks />}\r\n            {...rest}\r\n          />\r\n          <Toolbar />\r\n          <header className=\"Menu-header\">Dashboard</header>\r\n          <h2>Average Job Completion Time: \r\n            {avg.map((data, i) => {\r\n              return (\r\n                <div>\r\n                  {data.average_job_length}\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n            </h2>\r\n          <Paper className={useStyles.paper}>\r\n            <Grid container justify={\"center\"}>\r\n              <Grid>\r\n              <Chart\r\n                width={'500px'}\r\n                height={'300px'}\r\n                chartType=\"BarChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={data}\r\n                options={{\r\n                  // Material design options\r\n                  chart: {\r\n                    title: 'Company Performance',\r\n                    subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n                  },\r\n                }}\r\n                // For tests\r\n                rootProps={{ 'data-testid': '2' }}\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  ///\r\n  /// HTTP GET/POST METHODS\r\n  ///\r\n  getBox() {\r\n    //alert(boxID)\r\n    //boxID = 6\r\n    var path = \"http://localhost:52773/BoxTracker/boxes\"\r\n    //TEMPORARY\r\n    //jobID = \"1\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          //alert(JSON.stringify(response))\r\n          this.setState({\r\n            boxes: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  getAvg() {\r\n    var path = \"http://localhost:52773/BoxTracker/stats\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          this.setState({\r\n            avg: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  handleResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          alert(\"not OK, 401\")\r\n          // auto logout if 401 response returned from api\r\n          Location.reload(true);\r\n        }\r\n\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n  handleGetResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\ViewCustomers.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactScrollList from 'react-scroll-list';\nimport customerService from './customerService';\nimport Menu from './Menu';\nimport './Menu.css';\nimport './customers.css';\n\nclass AddCustomer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customers: {},\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  }\n\n  componentWillMount() {\n    this.getCustomers();\n  }\n\n  getCustomers() {\n    customerService.getCustomers();\n  }\n\n  routeMenu() {\n    ReactDOM.render(React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getKeys() {\n    return Object.keys(localStorage.customers[0]);\n  }\n\n  getHeader() {\n    var keys = this.getKeys();\n    return keys.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  getRowsData() {\n    {\n      var items = localStorage.customers;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  RenderRow() {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, props.data[key]);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          customers = _this$state.customers,\n          submitted = _this$state.submitted,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"View Customers\")), React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.getHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.getRowsData())), React.createElement(\"pre\", {\n      className: \"customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, JSON.stringify(JSON.parse(localStorage.customers), null, 2)), React.createElement(\"button\", {\n      onClick: this.routeMenu,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Menu\")));\n  }\n\n}\n\nexport default AddCustomer;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\ViewCustomers.jsx"],"names":["React","ReactDOM","ReactScrollList","customerService","Menu","AddCustomer","Component","constructor","props","params","state","user","customers","loading","handleChange","bind","getHeader","getRowsData","getKeys","componentWillMount","getCustomers","routeMenu","render","document","getElementById","e","target","name","value","setState","Object","keys","localStorage","map","key","index","toUpperCase","items","row","RenderRow","data","submitted","JSON","stringify","parse"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactScrollList from 'react-scroll-list'\r\nimport customerService from './customerService';\r\nimport Menu from './Menu';\r\nimport './Menu.css';\r\nimport './customers.css';\r\n\r\nclass AddCustomer extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customers: {},\r\n          loading: false\r\n      };\r\n    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getHeader = this.getHeader.bind(this);\r\n    this.getRowsData = this.getRowsData.bind(this);\r\n    this.getKeys = this.getKeys.bind(this);\r\n\r\n  }\r\n\r\n  componentWillMount()\r\n  {\r\n    this.getCustomers()\r\n  }\r\n\r\n  getCustomers(){\r\n    customerService.getCustomers()\r\n  }\r\n\r\n  routeMenu() {\r\n    ReactDOM.render(<Menu />, document.getElementById('root'))\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n  \r\n    getKeys(){\r\n        return Object.keys(localStorage.customers[0]);\r\n    }\r\n    getHeader(){\r\n        var keys = this.getKeys();\r\n        return keys.map((key, index)=>{\r\n        return <th key={key}>{key.toUpperCase()}</th>\r\n        })\r\n        }\r\n    getRowsData(){\r\n        {\r\n            var items = localStorage.customers;\r\n            var keys = this.getKeys();\r\n            return items.map((row, index)=>{\r\n            return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n            })\r\n            }\r\n    }\r\n\r\n    RenderRow(){\r\n        return props.keys.map((key, index)=>{\r\n          return <td key={props.data[key]}>{props.data[key]}</td>\r\n        })\r\n      }\r\n\r\n  render(){\r\n    const { user, customers, submitted, loading } = this.state;\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>View Customers</p>\r\n          </header>\r\n          <body>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    {this.getHeader()}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.getRowsData()}\r\n                </tbody>\r\n            </table>\r\n            <pre className = \"customer\">{JSON.stringify(JSON.parse(localStorage.customers), null, 2)}</pre>\r\n              <button onClick={this.routeMenu}  className=\"btn btn-primary\">Menu</button>\r\n          </body>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    \r\n  }\r\n  \r\n\r\nexport default AddCustomer;\r\n"]},"metadata":{},"sourceType":"module"}
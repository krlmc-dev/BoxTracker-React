{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\Pages\\\\ViewCustomer.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport JSONTree from 'react-json-tree';\nimport { JsonToTable } from \"react-json-to-table\"; //import customerService from '../Services/customerService';\n\nimport UserMenu from './UserMenu';\nimport Menu, { Item as MenuItem } from 'rc-menu';\nimport '../Menu.css';\nimport '../customers.css';\nconst JSONtheme = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\n\nclass ViewCustomer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customer: [],\n      customerJobs: [],\n      jobs: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomerByID(this.props.location.pathname);\n  }\n\n  routeMenu() {\n    ReactDOM.render(React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          customer = _this$state.customer,\n          customerJobs = _this$state.customerJobs;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Box Tracker\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, customer.map((data, i) => {\n      return React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"ID: \", data.customer_id), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name: \", data.customer_name), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Email: \", data.customer_email)));\n    })), React.createElement(ReactTable, {\n      data: customerJobs,\n      columns: [{\n        Header: \"Jobs\",\n        columns: [{\n          Header: \"Job ID\",\n          accessor: \"ID\"\n        }, {\n          Header: \"Number of Boxes\",\n          accessor: \"NumBoxes\"\n        }]\n      }],\n      filterable: true,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, (state, makeTable, instance) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(JSONTree, {\n        data: Object.assign({}, state, {\n          children: 'function () {...}'\n        }),\n        theme: JSONtheme,\n        invertTheme: true,\n        filtered: this.state.filtered,\n        onFilteredChange: filtered => this.setState({\n          filtered\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), makeTable());\n    }));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getCustomerByID(customerID) {\n    var path = \"http://localhost:52773/csp/BoxTracker\" + customerID;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        let CustomerReturn = JSON.parse(JSON.stringify(response));\n        let CDetails = [];\n        CDetails[0] = CustomerReturn[0];\n        this.setState({\n          customer: CDetails,\n          customerJobs: CustomerReturn[1]\n        }); //localStorage.setItem('customer', CustomerDetails);\n        //localStorage.setItem('customerJobs', CustomerJobs)\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewCustomer;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Pages\\ViewCustomer.jsx"],"names":["React","ReactDOM","ReactTable","JSONTree","JsonToTable","UserMenu","Menu","Item","MenuItem","JSONtheme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","ViewCustomer","Component","constructor","props","params","state","user","customer","customerJobs","jobs","loading","handleChange","bind","componentDidMount","getCustomerByID","location","pathname","routeMenu","render","document","getElementById","e","target","name","value","setState","menuStyle","margin","padding","height","overflow","customerStyle","map","data","i","customer_id","customer_name","customer_email","Header","columns","accessor","makeTable","instance","Object","assign","children","filtered","customerID","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","CustomerReturn","JSON","parse","stringify","CDetails","handleResponse","text","ok","status","alert","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport JSONTree from 'react-json-tree'\r\nimport { JsonToTable } from \"react-json-to-table\";\r\n//import customerService from '../Services/customerService';\r\nimport UserMenu from './UserMenu';\r\nimport Menu, {Item as MenuItem} from 'rc-menu';\r\nimport '../Menu.css';\r\nimport '../customers.css';\r\n\r\nconst JSONtheme = {\r\n  scheme: 'monokai',\r\n  author: 'wimer hazenberg (http://www.monokai.nl)',\r\n  base00: '#272822',\r\n  base01: '#383830',\r\n  base02: '#49483e',\r\n  base03: '#75715e',\r\n  base04: '#a59f85',\r\n  base05: '#f8f8f2',\r\n  base06: '#f5f4f1',\r\n  base07: '#f9f8f5',\r\n  base08: '#f92672',\r\n  base09: '#fd971f',\r\n  base0A: '#f4bf75',\r\n  base0B: '#a6e22e',\r\n  base0C: '#a1efe4',\r\n  base0D: '#66d9ef',\r\n  base0E: '#ae81ff',\r\n  base0F: '#cc6633'\r\n}\r\n\r\nclass ViewCustomer extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customer: [],\r\n          customerJobs: [],\r\n          jobs: [],\r\n          loading: false\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.getCustomerByID(this.props.location.pathname)\r\n  }\r\n  \r\n\r\n  routeMenu() {\r\n    ReactDOM.render(<UserMenu />, document.getElementById('root'))\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n\r\n  render(){\r\n    const { customer, customerJobs } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n        margin: 'auto',\r\n        padding: 20,\r\n        overflow: 'auto',\r\n      };\r\n    \r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n          </header>\r\n          <div className = 'content'>\r\n              {customer.map((data, i) => {\r\n                  return (\r\n                    <table align='center'>\r\n                        <tr key={i}>\r\n                          <td className='link'>ID: {data.customer_id}</td>\r\n                          <td className='link'>Name: {data.customer_name}</td>\r\n                          <td className='link'>Email: {data.customer_email}</td>\r\n                        </tr>\r\n                    </table>\r\n                  )})\r\n                  }\r\n              </div>\r\n          <ReactTable\r\n          data={customerJobs}\r\n          columns={[\r\n            {\r\n              Header: \"Jobs\",\r\n              columns: [\r\n                {\r\n                  Header: \"Job ID\",\r\n                  accessor: \"ID\"\r\n                },\r\n                {\r\n                  Header: \"Number of Boxes\",\r\n                  accessor: \"NumBoxes\"\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n           {(state, makeTable, instance) => {\r\n              return (\r\n                <div>\r\n                  <JSONTree\r\n                    data={Object.assign({}, state, {children: 'function () {...}'})}\r\n                    theme={JSONtheme}\r\n                    invertTheme\r\n                    \r\n                    filtered={this.state.filtered}\r\n                    onFilteredChange={filtered => this.setState({ filtered })}\r\n                  />\r\n                  {makeTable()}\r\n                </div>\r\n              )\r\n            }}\r\n          </ReactTable>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n///\r\n/// HTTP GET/POST METHODS\r\n///\r\ngetCustomerByID(customerID)\r\n{\r\n    var path = \"http://localhost:52773/csp/BoxTracker\"+customerID\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    \r\n    return fetch(path, requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n              let CustomerReturn = JSON.parse(JSON.stringify(response))\r\n              let CDetails = []\r\n              CDetails[0]=CustomerReturn[0]\r\n              this.setState({\r\n                  customer: CDetails,\r\n                  customerJobs: CustomerReturn[1]\r\n              })\r\n              //localStorage.setItem('customer', CustomerDetails);\r\n              //localStorage.setItem('customerJobs', CustomerJobs)\r\n          }\r\n            return response;\r\n        });\r\n}\r\n\r\nhandleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n  }\r\n  \r\n\r\nexport default ViewCustomer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\ViewJobs.jsx\";\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport '../Menu.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from './../Styles/gridStyle';\nconst useStyles = makeStyles(styles);\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      jobs: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getJobs();\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    var tableWidth = '450';\n    var cellWidth = '150';\n    const jobs = this.state.jobs;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 50,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      className: useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker - View Jobs\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      Item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      getTrGroupProps: (state, rowInfo) => {\n        if (rowInfo !== undefined) {\n          return {\n            onClick: () => {\n              var path = \"/job/\" + rowInfo.row.job_id;\n              this.props.history.push(path);\n            },\n            style: {\n              cursor: 'pointer',\n              background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\n              color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\n            }\n          };\n        }\n      },\n      data: jobs,\n      columns: [{\n        Header: \"Job ID\",\n        accessor: \"job_id\"\n      }, {\n        Header: \"Customer Name\",\n        accessor: \"customer_name\"\n      }, {\n        Header: \"Number of Boxes\",\n        accessor: \"job_numboxes\"\n      }],\n      filterable: true,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, (state, makeTable, instance) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, makeTable());\n    }))));\n  }\n\n  getJobs() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(\"http://localhost:52773/BoxTracker/jobs\", requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          jobs: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\ViewJobs.jsx"],"names":["React","ReactTable","Header","HeaderLinks","Grid","makeStyles","styles","useStyles","ViewJobs","Component","constructor","props","params","state","user","jobs","loading","handleChange","bind","componentWillMount","getJobs","e","target","name","value","setState","render","tableWidth","cellWidth","menuStyle","margin","padding","height","overflow","rest","root","rowInfo","undefined","onClick","path","row","job_id","history","push","style","cursor","background","original","id","selectedIndex","color","accessor","makeTable","instance","requestOptions","method","headers","fetch","then","handleGetResponse","response","text","data","JSON","parse","ok","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport '../Menu.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from './../Styles/gridStyle';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nclass ViewJobs extends React.Component {\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.params = {};\r\n    this.state = {\r\n      user: {},\r\n      jobs: [],\r\n      loading: false\r\n    };\r\n\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentWillMount() {\r\n    this.getJobs()\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    var tableWidth = '450'\r\n    var cellWidth = '150'\r\n    const { jobs } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 50,\r\n      // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    const { ...rest } = this.props;\r\n    return (\r\n      <div className={useStyles.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item>\r\n          <Header\r\n          absolute\r\n          fixed\r\n          color=\"dark\"\r\n          brand=\"Box Tracker - View Jobs\"\r\n          rightLinks={<HeaderLinks />}\r\n          {...rest}\r\n        />\r\n          </Grid>\r\n          <Grid Item xs>\r\n          <ReactTable\r\n          getTrGroupProps={(state, rowInfo) => {\r\n            if (rowInfo !== undefined) {\r\n              return {\r\n                onClick: () => {\r\n                  var path = \"/job/\" + rowInfo.row.job_id\r\n                  this.props.history.push(path);\r\n                },\r\n                style: {\r\n                  cursor: 'pointer',\r\n                  background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\r\n                  color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\r\n                }\r\n              }\r\n            }\r\n          }\r\n          }\r\n          data={jobs}\r\n          columns={[\r\n            {\r\n              Header: \"Job ID\",\r\n              accessor: \"job_id\"\r\n            },\r\n            {\r\n              Header: \"Customer Name\",\r\n              accessor: \"customer_name\"\r\n            },\r\n            {\r\n              Header: \"Number of Boxes\",\r\n              accessor: \"job_numboxes\"\r\n            }\r\n          ]}\r\n          filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n          {(state, makeTable, instance) => {\r\n            return (\r\n              <div>\r\n                {makeTable()}\r\n              </div>\r\n            )\r\n          }}\r\n        </ReactTable>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getJobs() {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(\"http://localhost:52773/BoxTracker/jobs\", requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          this.setState({\r\n            jobs: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  handleGetResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ViewJobs;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\Pages\\\\ViewCustomers.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, NavLink } from 'react-router-dom';\nimport { JsonToTable } from \"react-json-to-table\";\nimport customerService from '../Services/customerService';\nimport UserMenu from './UserMenu';\nimport ViewCustomer from './ViewCustomer';\nimport Menu, { Item as MenuItem } from 'rc-menu';\nimport '../Menu.css';\nimport '../customers.css';\nimport '../index.css';\n\nclass ViewCustomers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customers: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getCustomers();\n  }\n\n  routeMenu() {\n    ReactDOM.render(React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    var tableWidth = '400';\n    const customers = this.state.customers;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      width: 'auto',\n      height: 'flex',\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"View Customers\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      align: \"center\",\n      width: tableWidth,\n      border: \"1pt solid black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Customer ID\"), React.createElement(\"td\", {\n      width: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Customer Name\")), React.createElement(Menu, {\n      style: menuStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, customers.map((data, i) => {\n      return React.createElement(\"table\", {\n        align: \"center\",\n        width: tableWidth,\n        border: \"1pt solid black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        width: \"150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, data.customer_id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/customer/\" + data.customer_id,\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, data.customer_name))));\n    }))));\n  }\n\n  getCustomers() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          customers: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewCustomers;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Pages\\ViewCustomers.jsx"],"names":["React","ReactDOM","Route","NavLink","JsonToTable","customerService","UserMenu","ViewCustomer","Menu","Item","MenuItem","ViewCustomers","Component","constructor","props","params","state","user","customers","loading","handleChange","bind","componentWillMount","getCustomers","routeMenu","render","document","getElementById","e","target","name","value","setState","tableWidth","menuStyle","margin","padding","width","height","overflow","map","data","i","customer_id","customer_name","requestOptions","method","headers","fetch","then","handleGetResponse","response","text","JSON","parse","ok","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Route, NavLink} from 'react-router-dom';\r\nimport { JsonToTable } from \"react-json-to-table\";\r\nimport customerService from '../Services/customerService';\r\nimport UserMenu from './UserMenu';\r\nimport ViewCustomer from './ViewCustomer';\r\nimport Menu, {Item as MenuItem} from 'rc-menu';\r\nimport '../Menu.css';\r\nimport '../customers.css';\r\nimport '../index.css';\r\n\r\nclass ViewCustomers extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customers: [],\r\n          loading: false\r\n      };\r\n    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentWillMount()\r\n  {\r\n    this.getCustomers()\r\n  }\r\n\r\n  routeMenu() {\r\n    ReactDOM.render(<UserMenu />, document.getElementById('root'))\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n  render(){\r\n    var tableWidth = '400'\r\n    const {  customers } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n      width: 'auto',\r\n      height: 'flex',\r\n      overflow: 'auto',\r\n    };\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>View Customers</p>\r\n          </header>\r\n          <div className = 'content'>\r\n            <table align='center' width={tableWidth} border='1pt solid black'>\r\n              <td width = '150'> Customer ID</td>\r\n              <td width>Customer Name</td>\r\n            </table>\r\n          <Menu style={menuStyle}>\r\n              {customers.map((data, i) => {\r\n                  return (\r\n                    <table align='center' width = {tableWidth} border='1pt solid black'>\r\n                        <tr key={i} >\r\n                            <td className='link' width = '150'>{data.customer_id}</td>\r\n                            <td><NavLink to={\"/customer/\"+data.customer_id }className='link'>{data.customer_name}</NavLink></td>\r\n                        </tr>\r\n                    </table>\r\n                        \r\n                      \r\n                  )})\r\n                  }\r\n              \r\n              </Menu>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    getCustomers()\r\n{\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(\"http://localhost:52773/csp/BoxTracker/customers\", requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n                this.setState({customers: response});\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n  return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n          const error = (data && data.message) || response.statusText;\r\n          return Promise.reject(error);\r\n      }\r\n      return data;\r\n  });\r\n}\r\n  }\r\n  \r\n\r\nexport default ViewCustomers;\r\n"]},"metadata":{},"sourceType":"module"}
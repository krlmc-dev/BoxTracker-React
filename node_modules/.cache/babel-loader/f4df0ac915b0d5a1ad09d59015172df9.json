{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Components\\\\Charts\\\\BoxLocationsChart.jsx\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nexport default class LocationChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = {\n      dataBar: {\n        labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\n        datasets: [{\n          label: \"No. Of Boxes\",\n          data: [12, 19, 3, 5],\n          backgroundColor: [\"rgba(113, 205, 205,0.4)\", \"rgba(98,  182, 239,0.4)\", \"rgba(255, 177, 101,0.4)\", \"rgba(255, 134,159,0.4)\"],\n          borderWidth: 2,\n          borderColor: [\"rgba(113, 205, 205, 1)\", \"rgba(98,  182, 239, 1)\", \"rgba(255, 177, 101, 1)\", \"rgba(255, 134, 159, 1)\"]\n        }]\n      },\n      barChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n    this.params = {};\n    this.state = {\n      stats: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      stats: this.props.stats\n    });\n  }\n\n  getLocationNums() {\n    const stats = this.state.stats;\n    stats.map((data, i) => {\n      let locationNums = [];\n      locationNums[0] = data.LocNums[0];\n      locationNums[1] = data.LocNums[1];\n      locationNums[2] = data.LocNums[2];\n      locationNums[3] = data.LocNums[3];\n      return locationNums;\n    });\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Number of Boxes Per Step\"), React.createElement(Bar, {\n      data: this.chart.dataBar,\n      options: this.chart.barChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Components\\Charts\\BoxLocationsChart.jsx"],"names":["React","Bar","MDBContainer","LocationChart","Component","constructor","props","chart","dataBar","labels","datasets","label","data","backgroundColor","borderWidth","borderColor","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","params","state","stats","componentWillMount","setState","getLocationNums","map","i","locationNums","LocNums","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nexport default class LocationChart extends React.Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.params = {};\r\n        this.state = {\r\n          stats: []\r\n        };\r\n    }\r\n    componentWillMount()\r\n    {\r\n        this.setState({\r\n            stats: this.props.stats\r\n        })\r\n    }\r\n\r\n    getLocationNums()\r\n    {\r\n        const { stats } = this.state\r\n        stats.map((data, i) => {\r\n            let locationNums = []\r\n            locationNums[0] = data.LocNums[0]\r\n            locationNums[1] = data.LocNums[1]\r\n            locationNums[2] = data.LocNums[2]\r\n            locationNums[3] = data.LocNums[3]\r\n            return locationNums\r\n          })\r\n          \r\n    }\r\n  chart = {\r\n    dataBar: {\r\n      labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\r\n      datasets: [\r\n        {\r\n          label: \"No. Of Boxes\",\r\n          data: [12, 19, 3, 5],\r\n          backgroundColor: [\r\n            \"rgba(113, 205, 205,0.4)\",\r\n            \"rgba(98,  182, 239,0.4)\",\r\n            \"rgba(255, 177, 101,0.4)\",\r\n            \"rgba(255, 134,159,0.4)\"\r\n            \r\n          ],\r\n          borderWidth: 2,\r\n          borderColor: [\r\n            \"rgba(113, 205, 205, 1)\",\r\n            \"rgba(98,  182, 239, 1)\",\r\n            \"rgba(255, 177, 101, 1)\",\r\n            \"rgba(255, 134, 159, 1)\"\r\n            \r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    barChartOptions: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            barPercentage: 1,\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            },\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h3 className=\"mt-5\">Number of Boxes Per Step</h3>\r\n        <Bar data={this.chart.dataBar} options={this.chart.barChartOptions} />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
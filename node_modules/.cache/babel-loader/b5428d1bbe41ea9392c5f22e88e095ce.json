{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\ViewCustomer.jsx\";\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport \"react-table/react-table.css\";\nimport '../customers.css';\nimport '../Menu.css';\nconst JSONtheme = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\n\nclass ViewCustomer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customer: [],\n      customerJobs: [],\n      jobs: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomerByID(this.props.location.pathname);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          customer = _this$state.customer,\n          customerJobs = _this$state.customerJobs;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"View Customer\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, customer.map((data, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Customer ID: \", data.customer_id), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Name: \", data.customer_name), React.createElement(\"td\", {\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Email: \", data.customer_email))), React.createElement(\"button\", {\n        button: true,\n        onClick: () => {\n          var path = \"/addjob/\" + data.customer_id;\n          localStorage.setItem('customer_name', data.customer_name);\n          this.props.history.push(path);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Add Job\"));\n    })), React.createElement(ReactTable, {\n      getTrGroupProps: (state, rowInfo) => {\n        if (rowInfo !== undefined) {\n          return {\n            onClick: () => {\n              var path = \"/job/\" + rowInfo.row.job_id;\n              this.props.history.push(path);\n            },\n            style: {\n              cursor: 'pointer',\n              background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\n              color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\n            }\n          };\n        }\n      },\n      data: customerJobs,\n      columns: [{\n        Header: \"Jobs\",\n        columns: [{\n          Header: \"Job ID\",\n          accessor: \"job_id\"\n        }, {\n          Header: \"Number of Boxes\",\n          accessor: \"job_numboxes\"\n        }]\n      }],\n      filterable: true,\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, (state, makeTable, instance) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, makeTable());\n    }));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getCustomerByID(customerID) {\n    var path = \"http://localhost:52773/BoxTracker\" + customerID;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        let CustomerReturn = JSON.parse(JSON.stringify(response));\n        let CDetails = [];\n        CDetails[0] = CustomerReturn[0];\n        this.setState({\n          customer: CDetails,\n          customerJobs: CustomerReturn[1]\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewCustomer;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\ViewCustomer.jsx"],"names":["React","ReactTable","Header","HeaderLinks","Toolbar","JSONtheme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","ViewCustomer","Component","constructor","props","params","state","user","customer","customerJobs","jobs","loading","handleChange","bind","componentDidMount","getCustomerByID","location","pathname","e","target","name","value","setState","render","menuStyle","margin","padding","height","overflow","customerStyle","rest","map","data","i","customer_id","customer_name","customer_email","path","localStorage","setItem","history","push","rowInfo","undefined","onClick","row","job_id","style","cursor","background","original","id","selectedIndex","color","columns","accessor","makeTable","instance","customerID","requestOptions","method","headers","fetch","then","handleGetResponse","response","CustomerReturn","JSON","parse","stringify","CDetails","handleResponse","text","ok","status","alert","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport \"react-table/react-table.css\";\r\nimport '../customers.css';\r\nimport '../Menu.css';\r\n\r\nconst JSONtheme = {\r\n  scheme: 'monokai',\r\n  author: 'wimer hazenberg (http://www.monokai.nl)',\r\n  base00: '#272822',\r\n  base01: '#383830',\r\n  base02: '#49483e',\r\n  base03: '#75715e',\r\n  base04: '#a59f85',\r\n  base05: '#f8f8f2',\r\n  base06: '#f5f4f1',\r\n  base07: '#f9f8f5',\r\n  base08: '#f92672',\r\n  base09: '#fd971f',\r\n  base0A: '#f4bf75',\r\n  base0B: '#a6e22e',\r\n  base0C: '#a1efe4',\r\n  base0D: '#66d9ef',\r\n  base0E: '#ae81ff',\r\n  base0F: '#cc6633'\r\n}\r\n\r\nclass ViewCustomer extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          customer: [],\r\n          customerJobs: [],\r\n          jobs: [],\r\n          loading: false\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.getCustomerByID(this.props.location.pathname)\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n\r\n  render(){\r\n    const { customer, customerJobs } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n        margin: 'auto',\r\n        padding: 20,\r\n        overflow: 'auto',\r\n      };\r\n      const { ...rest } = this.props;\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <Header\r\n                absolute\r\n                fixed\r\n                color=\"dark\"\r\n                brand=\"Box Tracker\"\r\n                rightLinks={<HeaderLinks />}\r\n                {...rest}\r\n            />\r\n        \r\n        <Toolbar />\r\n        <div className=\"Menu-header\">\r\n          <p>View Customer</p>\r\n        </div>\r\n            <div className = 'content'>\r\n              {customer.map((data, i) => {\r\n                  return (\r\n                    <div>\r\n                    <table align='center'>\r\n                        <tr key={i}>\r\n                          <td className='link'>Customer ID: {data.customer_id}</td>\r\n                          <td className='link'>Name: {data.customer_name}</td>\r\n                          <td className='link'>Email: {data.customer_email}</td>\r\n                        </tr>\r\n                    </table>\r\n                    <button button onClick={() => {\r\n                      var path = \"/addjob/\"+data.customer_id\r\n                      localStorage.setItem('customer_name', data.customer_name)\r\n                      this.props.history.push(path)}}>Add Job</button>\r\n                    </div>\r\n                  )})\r\n                  }\r\n              </div>\r\n          \r\n\r\n          <ReactTable\r\n          getTrGroupProps={(state, rowInfo) => {\r\n            if (rowInfo !== undefined) {\r\n              return {\r\n                  onClick: () => {\r\n                    var path = \"/job/\"+rowInfo.row.job_id\r\n                    this.props.history.push(path);\r\n                  },\r\n                  style: {\r\n                      cursor: 'pointer',\r\n                      background: rowInfo.original.id === this.state.selectedIndex ? '#00afec' : 'white',\r\n                      color: rowInfo.original.id === this.state.selectedIndex ? 'white' : 'black'\r\n                              }\r\n                          }\r\n                    }}\r\n                }\r\n          data={customerJobs}\r\n          columns={[\r\n            {\r\n              Header: \"Jobs\",\r\n              columns: [\r\n                {\r\n                  Header: \"Job ID\",\r\n                  accessor: \"job_id\"\r\n                },\r\n                {\r\n                  Header: \"Number of Boxes\",\r\n                  accessor: \"job_numboxes\"\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n           {(state, makeTable, instance) => {\r\n              return (\r\n                <div>\r\n                  {makeTable()}\r\n                </div>\r\n              )\r\n            }}\r\n            \r\n          </ReactTable>\r\n          </div>\r\n      );\r\n    }\r\n///\r\n/// HTTP GET/POST METHODS\r\n///\r\ngetCustomerByID(customerID)\r\n{\r\n    var path = \"http://localhost:52773/BoxTracker\"+customerID\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    \r\n    return fetch(path, requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n              //alert(JSON.stringify(response))\r\n\r\n              let CustomerReturn = JSON.parse(JSON.stringify(response))\r\n              let CDetails = []\r\n              CDetails[0]=CustomerReturn[0]\r\n              this.setState({\r\n                  customer: CDetails,\r\n                  customerJobs: CustomerReturn[1]\r\n              })\r\n          }\r\n            return response;\r\n        });\r\n}\r\n\r\nhandleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n  }\r\n  \r\n\r\nexport default ViewCustomer;\r\n"]},"metadata":{},"sourceType":"module"}
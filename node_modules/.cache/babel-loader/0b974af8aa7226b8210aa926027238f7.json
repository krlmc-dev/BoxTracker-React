{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\Dashboard.jsx\";\n//core React imports\nimport React from 'react';\nimport ReactTable from 'react-table'; //@material-react imports\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //chart\n\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; //App imports\n\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport ContinueDialogue from './ContinueDialogue';\nimport CompletedChart from './../Components/Charts/BoxesCompletedChart'; //import LocationChart from './../Components/Charts/BoxLocationsChart';\n//css imports\n\nimport \"react-table/react-table.css\";\nimport '../customers.css';\nimport '../Menu.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  }\n}));\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      boxes: [],\n      avg: [],\n      loading: false,\n      go: false,\n      show: false,\n      isShown: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\n    this.getBox();\n    this.getAvg();\n  }\n\n  componentDidUpdate() {}\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      value: \"\",\n      go: true\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    const _this$state = this.state,\n          show = _this$state.show,\n          isShown = _this$state.isShown,\n          boxes = _this$state.boxes,\n          avg = _this$state.avg,\n          boxID = _this$state.boxID;\n    const locs = avg.map((data, i) => {\n      return data.loc_nums;\n    });\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      classname: useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Average Job Completion Time:\", avg.map((data, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, data.average_job_length);\n    })), React.createElement(Paper, {\n      className: useStyles.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(LocationChart, {\n      locs: locs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))))));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getBox() {\n    //alert(boxID)\n    //boxID = 6\n    var path = \"http://localhost:52773/BoxTracker/boxes\"; //TEMPORARY\n    //jobID = \"1\"\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        this.setState({\n          boxes: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  getAvg() {\n    var path = \"http://localhost:52773/BoxTracker/stats\";\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          avg: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nclass LocationChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.chart = {\n      dataBar: {\n        labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\n        datasets: [{\n          label: \"No. Of Boxes\",\n          data: [12, 19, 3, 5],\n          backgroundColor: [\"rgba(113, 205, 205,0.4)\", \"rgba(98,  182, 239,0.4)\", \"rgba(255, 177, 101,0.4)\", \"rgba(255, 134,159,0.4)\"],\n          borderWidth: 2,\n          borderColor: [\"rgba(113, 205, 205, 1)\", \"rgba(98,  182, 239, 1)\", \"rgba(255, 177, 101, 1)\", \"rgba(255, 134, 159, 1)\"]\n        }]\n      },\n      barChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            barPercentage: 1,\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              color: \"rgba(0, 0, 0, 0.1)\"\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n  }\n\n  getLocationNums() {\n    this.state.stats.map((data, i) => {\n      let locationNums = [];\n      locationNums[0] = data.LocNums[0];\n      locationNums[1] = data.LocNums[1];\n      locationNums[2] = data.LocNums[2];\n      locationNums[3] = data.LocNums[3];\n      return locationNums;\n    });\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Number of Boxes Per Step\"), React.createElement(Bar, {\n      data: this.chart.dataBar,\n      options: this.chart.barChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\Dashboard.jsx"],"names":["React","ReactTable","Toolbar","makeStyles","Grid","Paper","Bar","MDBContainer","Header","HeaderLinks","ContinueDialogue","CompletedChart","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","Dashboard","Component","constructor","props","params","state","user","boxes","avg","loading","go","show","isShown","handleChange","bind","handleSubmit","componentDidMount","getBox","getAvg","componentDidUpdate","e","setState","value","target","preventDefault","render","boxID","locs","map","data","i","loc_nums","menuStyle","height","overflow","customerStyle","rest","average_job_length","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","handleResponse","text","JSON","parse","ok","status","alert","Location","reload","error","message","statusText","Promise","reject","LocationChart","chart","dataBar","labels","datasets","label","backgroundColor","borderWidth","borderColor","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","getLocationNums","stats","locationNums","LocNums"],"mappings":"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","sourcesContent":["//core React imports\r\nimport React from 'react';\r\nimport ReactTable from 'react-table';\r\n//@material-react imports\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n//chart\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n//App imports\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport ContinueDialogue from './ContinueDialogue';\r\nimport CompletedChart from './../Components/Charts/BoxesCompletedChart';\r\n//import LocationChart from './../Components/Charts/BoxLocationsChart';\r\n//css imports\r\nimport \"react-table/react-table.css\";\r\nimport '../customers.css';\r\nimport '../Menu.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  }\r\n}))\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.params = {};\r\n    this.state = {\r\n      user: {},\r\n      boxes: [],\r\n      avg: [],\r\n      loading: false,\r\n      go: false,\r\n      show: false,\r\n      isShown: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\r\n    this.getBox()\r\n    this.getAvg()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({\r\n      value: \"\",\r\n      go: true\r\n    })\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { show, isShown, boxes, avg, boxID } = this.state\r\n    const locs = avg.map((data, i) => {\r\n      return data.loc_nums\r\n    })\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n      // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n      margin: 'auto',\r\n      padding: 20,\r\n      overflow: 'auto',\r\n    };\r\n    const { ...rest } = this.props;\r\n    \r\n    \r\n    return (\r\n      <div classname={useStyles.root}>\r\n        <div className=\"Menu\">\r\n          <Header\r\n            absolute\r\n            fixed\r\n            color=\"dark\"\r\n            brand=\"Box Tracker\"\r\n            rightLinks={<HeaderLinks />}\r\n            {...rest}\r\n          />\r\n          <Toolbar />\r\n          <header className=\"Menu-header\">Dashboard</header>\r\n          <h2>Average Job Completion Time: \r\n            {avg.map((data, i) => {\r\n              return (\r\n                <div>\r\n                  {data.average_job_length}\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n            </h2>\r\n          <Paper className={useStyles.paper}>\r\n            <Grid container justify={\"center\"}>\r\n              <Grid>\r\n                <LocationChart locs={locs}/>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  ///\r\n  /// HTTP GET/POST METHODS\r\n  ///\r\n  getBox() {\r\n    //alert(boxID)\r\n    //boxID = 6\r\n    var path = \"http://localhost:52773/BoxTracker/boxes\"\r\n    //TEMPORARY\r\n    //jobID = \"1\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          //alert(JSON.stringify(response))\r\n          this.setState({\r\n            boxes: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  getAvg() {\r\n    var path = \"http://localhost:52773/BoxTracker/stats\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          this.setState({\r\n            avg: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  handleResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          alert(\"not OK, 401\")\r\n          // auto logout if 401 response returned from api\r\n          Location.reload(true);\r\n        }\r\n\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n  handleGetResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n\r\nclass LocationChart extends React.Component {\r\n  getLocationNums()\r\n  {\r\n      this.state.stats.map((data, i) => {\r\n          let locationNums = []\r\n          locationNums[0] = data.LocNums[0]\r\n          locationNums[1] = data.LocNums[1]\r\n          locationNums[2] = data.LocNums[2]\r\n          locationNums[3] = data.LocNums[3]\r\n          return locationNums\r\n        })\r\n        \r\n  }\r\nchart = {\r\n  dataBar: {\r\n    labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\r\n    datasets: [\r\n      {\r\n        label: \"No. Of Boxes\",\r\n        data: [12, 19, 3, 5],\r\n        backgroundColor: [\r\n          \"rgba(113, 205, 205,0.4)\",\r\n          \"rgba(98,  182, 239,0.4)\",\r\n          \"rgba(255, 177, 101,0.4)\",\r\n          \"rgba(255, 134,159,0.4)\"\r\n          \r\n        ],\r\n        borderWidth: 2,\r\n        borderColor: [\r\n          \"rgba(113, 205, 205, 1)\",\r\n          \"rgba(98,  182, 239, 1)\",\r\n          \"rgba(255, 177, 101, 1)\",\r\n          \"rgba(255, 134, 159, 1)\"\r\n          \r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  barChartOptions: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1,\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(0, 0, 0, 0.1)\"\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(0, 0, 0, 0.1)\"\r\n          },\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\nrender() {\r\n  return (\r\n    <MDBContainer>\r\n      <h3 className=\"mt-5\">Number of Boxes Per Step</h3>\r\n      <Bar data={this.chart.dataBar} options={this.chart.barChartOptions} />\r\n    </MDBContainer>\r\n  );\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}
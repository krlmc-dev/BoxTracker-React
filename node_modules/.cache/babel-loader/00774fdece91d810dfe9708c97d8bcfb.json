{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\Dashboard.jsx\";\n//core React imports\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport { Bar } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; //@material-react imports\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //App imports\n\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport ContinueDialogue from './ContinueDialogue'; //css imports\n\nimport \"react-table/react-table.css\";\nimport '../customers.css';\nimport '../Menu.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  }\n}));\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      boxes: [],\n      locNums: [],\n      stats: [],\n      loading: false,\n      go: false,\n      show: false,\n      isShown: false,\n      chart: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\n    this.getBox();\n    this.getStats();\n    this.setChart();\n  }\n\n  componentDidUpdate() {}\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      value: \"\",\n      go: true\n    });\n    e.preventDefault();\n  }\n\n  setChart() {\n    this.setState({\n      chart: {\n        dataBar: {\n          labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\n          datasets: [{\n            label: \"No. Of Boxes\",\n            data: this.state.locNums,\n            backgroundColor: [\"rgba(113, 205, 205,0.4)\", \"rgba(98,  182, 239,0.4)\", \"rgba(255, 177, 101,0.4)\", \"rgba(255, 134,159,0.4)\"],\n            borderWidth: 2,\n            borderColor: [\"rgba(113, 205, 205, 1)\", \"rgba(98,  182, 239, 1)\", \"rgba(255, 177, 101, 1)\", \"rgba(255, 134, 159, 1)\"]\n          }]\n        },\n        barChartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              barPercentage: 1,\n              gridLines: {\n                display: true,\n                color: \"rgba(0, 0, 0, 0.1)\"\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                display: true,\n                color: \"rgba(0, 0, 0, 0.1)\"\n              },\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          show = _this$state.show,\n          isShown = _this$state.isShown,\n          boxes = _this$state.boxes,\n          stats = _this$state.stats,\n          locNums = _this$state.locNums,\n          boxID = _this$state.boxID;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      classname: useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Average Job Completion Time:\", stats.map((data, i) => {\n      this.setState({\n        locNums: data.loc_nums\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, data.average_job_length);\n    })), React.createElement(Paper, {\n      className: useStyles.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Number of Boxes Per Step\"), React.createElement(Bar, {\n      data: this.state.chart.dataBar,\n      options: this.state.chart.barChartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })))))));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getBox() {\n    //alert(boxID)\n    //boxID = 6\n    var path = \"http://localhost:52773/BoxTracker/boxes\"; //TEMPORARY\n    //jobID = \"1\"\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        this.setState({\n          boxes: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  getStats() {\n    var path = \"http://localhost:52773/BoxTracker/stats\";\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          stats: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\Dashboard.jsx"],"names":["React","ReactTable","Bar","MDBContainer","Toolbar","makeStyles","Grid","Paper","Header","HeaderLinks","ContinueDialogue","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","maxWidth","Dashboard","Component","constructor","props","params","state","user","boxes","locNums","stats","loading","go","show","isShown","chart","handleChange","bind","handleSubmit","componentDidMount","getBox","getStats","setChart","componentDidUpdate","e","setState","value","target","preventDefault","dataBar","labels","datasets","label","data","backgroundColor","borderWidth","borderColor","barChartOptions","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","display","color","yAxes","ticks","beginAtZero","render","boxID","menuStyle","height","overflow","customerStyle","rest","map","i","loc_nums","average_job_length","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","handleResponse","text","JSON","parse","ok","status","alert","Location","reload","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["//core React imports\r\nimport React from 'react';\r\nimport ReactTable from 'react-table';\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n//@material-react imports\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n//App imports\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport ContinueDialogue from './ContinueDialogue';\r\n//css imports\r\nimport \"react-table/react-table.css\";\r\nimport '../customers.css';\r\nimport '../Menu.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  }\r\n}))\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.params = {};\r\n    this.state = {\r\n      user: {},\r\n      boxes: [],\r\n      locNums: [],\r\n      stats: [],\r\n      loading: false,\r\n      go: false,\r\n      show: false,\r\n      isShown: false,\r\n      chart: {}\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    //ReactDOM.findDOMNode(this.refs.divFocus).focus();\r\n    this.getBox()\r\n    this.getStats()\r\n    this.setChart()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.setState({\r\n      value: \"\",\r\n      go: true\r\n    })\r\n    e.preventDefault();\r\n  }\r\n\r\n  setChart()\r\n  {\r\n    this.setState({\r\n      chart: {\r\n        dataBar: {\r\n          labels: [\"Preparation\", \"Scanning\", \"Quality Control\", \"Dispatch\"],\r\n          datasets: [\r\n            {\r\n              label: \"No. Of Boxes\",\r\n              data: this.state.locNums,\r\n              backgroundColor: [\r\n                \"rgba(113, 205, 205,0.4)\",\r\n                \"rgba(98,  182, 239,0.4)\",\r\n                \"rgba(255, 177, 101,0.4)\",\r\n                \"rgba(255, 134,159,0.4)\"\r\n                \r\n              ],\r\n              borderWidth: 2,\r\n              borderColor: [\r\n                \"rgba(113, 205, 205, 1)\",\r\n                \"rgba(98,  182, 239, 1)\",\r\n                \"rgba(255, 177, 101, 1)\",\r\n                \"rgba(255, 134, 159, 1)\"\r\n                \r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        barChartOptions: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                barPercentage: 1,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(0, 0, 0, 0.1)\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(0, 0, 0, 0.1)\"\r\n                },\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n  \r\n\r\n  render() {\r\n    \r\n    const { show, isShown, boxes, stats, locNums, boxID } = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n      // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n      margin: 'auto',\r\n      padding: 20,\r\n      overflow: 'auto',\r\n    };\r\n    const { ...rest } = this.props;\r\n    \r\n    \r\n    return (\r\n      <div classname={useStyles.root}>\r\n        <div className=\"Menu\">\r\n          <Header\r\n            absolute\r\n            fixed\r\n            color=\"dark\"\r\n            brand=\"Box Tracker\"\r\n            rightLinks={<HeaderLinks />}\r\n            {...rest}\r\n          />\r\n          <Toolbar />\r\n          <header className=\"Menu-header\">Dashboard</header>\r\n          <h2>Average Job Completion Time: \r\n            {stats.map((data, i) => {\r\n              this.setState({locNums: data.loc_nums})\r\n              return (\r\n                <div>\r\n                  {data.average_job_length}\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n            </h2>\r\n          <Paper className={useStyles.paper}>\r\n            <Grid container justify={\"center\"}>\r\n              <Grid item>\r\n              <MDBContainer>\r\n                <h3 className=\"mt-5\">Number of Boxes Per Step</h3>\r\n                <Bar data={this.state.chart.dataBar} options={this.state.chart.barChartOptions} />\r\n              </MDBContainer>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  ///\r\n  /// HTTP GET/POST METHODS\r\n  ///\r\n  getBox() {\r\n    //alert(boxID)\r\n    //boxID = 6\r\n    var path = \"http://localhost:52773/BoxTracker/boxes\"\r\n    //TEMPORARY\r\n    //jobID = \"1\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          //alert(JSON.stringify(response))\r\n          this.setState({\r\n            boxes: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  getStats() {\r\n    var path = \"http://localhost:52773/BoxTracker/stats\"\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M=',\r\n      }\r\n    };\r\n    return fetch(path, requestOptions)\r\n      .then(this.handleGetResponse)\r\n      .then(response => {\r\n        if (response) {\r\n          this.setState({\r\n            stats: response\r\n          })\r\n        }\r\n        return response;\r\n      });\r\n  }\r\n\r\n  handleResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          alert(\"not OK, 401\")\r\n          // auto logout if 401 response returned from api\r\n          Location.reload(true);\r\n        }\r\n\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n  handleGetResponse(response) {\r\n\r\n    return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      if (!response.ok) {\r\n        const error = (data && data.message) || response.statusText;\r\n        return Promise.reject(error);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}
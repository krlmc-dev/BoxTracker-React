{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nconst portalRoot = document.getElementById(\"portal\");\n\nclass Portal extends React.Component {\n  constructor() {\n    super(); // 1: Create a new div that wraps the component\n\n    this.componentDidMount = () => {\n      portalRoot.appendChild(this.el);\n    };\n\n    this.componentWillUnmount = () => {\n      portalRoot.removeChild(this.el);\n    };\n\n    this.el = document.createElement(\"div\");\n  } // 2: Append the element to the DOM when it mounts\n\n\n  render() {\n    // 4: Render the element's children in a Portal\n    const children = this.props.children;\n    return ReactDOM.createPortal(children, this.el);\n  }\n\n}\n\nexport default Portal;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\Portal.jsx"],"names":["React","ReactDOM","portalRoot","document","getElementById","Portal","Component","constructor","componentDidMount","appendChild","el","componentWillUnmount","removeChild","createElement","render","children","props","createPortal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAnB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AAFY,SAMdC,iBANc,GAMM,MAAM;AACxBN,MAAAA,UAAU,CAACO,WAAX,CAAuB,KAAKC,EAA5B;AACD,KARa;;AAAA,SAUdC,oBAVc,GAUS,MAAM;AAC3BT,MAAAA,UAAU,CAACU,WAAX,CAAuB,KAAKF,EAA5B;AACD,KAZa;;AAGZ,SAAKA,EAAL,GAAUP,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAV;AACD,GALgC,CAMjC;;;AAQAC,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAGP,WAAOd,QAAQ,CAACgB,YAAT,CAAsBF,QAAtB,EAAgC,KAAKL,EAArC,CAAP;AACD;;AAlBgC;;AAoBnC,eAAeL,MAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst portalRoot = document.getElementById(\"portal\");\r\n\r\nclass Portal extends React.Component {\r\n    constructor() {\r\n      super();\r\n      // 1: Create a new div that wraps the component\r\n      this.el = document.createElement(\"div\");\r\n    }\r\n    // 2: Append the element to the DOM when it mounts\r\n    componentDidMount = () => {\r\n      portalRoot.appendChild(this.el);\r\n    };\r\n    // 3: Remove the element when it unmounts\r\n    componentWillUnmount = () => {\r\n      portalRoot.removeChild(this.el);\r\n    };\r\n    render() {\r\n      // 4: Render the element's children in a Portal\r\n      const { children } = this.props;\r\n      return ReactDOM.createPortal(children, this.el);\r\n    }\r\n  }\r\n  export default Portal"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"C:\\\\BoxTracker-React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\AddJob.jsx\";\nimport FormControl from '@material-ui/core/FormControl';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Header from \"./../Components/Headers/Header\";\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport '../index.css';\nimport '../Menu.css';\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nclass AddJob extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      customer_name: '',\n      numBoxes: '',\n      jobLocation: 'Loading Dock',\n      jobDispatch: 'Archive / Storage',\n      submitted: false,\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const _this$state = this.state,\n          customer_id = _this$state.customer_id,\n          numBoxes = _this$state.numBoxes,\n          jobLocation = _this$state.jobLocation,\n          jobDispatch = _this$state.jobDispatch,\n          returnUrl = _this$state.returnUrl; // stop here if form is invalid\n\n    if (!numBoxes) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    this.addJob(this.props.match.params.id, numBoxes, jobLocation, jobDispatch).then(response => {\n      this.setState({\n        loading: false\n      });\n    }, error => this.setState({\n      error,\n      loading: false\n    }));\n    var path = \"/customer/\" + this.props.match.params.id;\n    this.props.history.push(path);\n  }\n\n  render() {\n    var path = \"/customer/\" + this.props.match.params.id;\n    const _this$state2 = this.state,\n          user = _this$state2.user,\n          customerID = _this$state2.customerID,\n          numBoxes = _this$state2.numBoxes,\n          jobLocation = _this$state2.jobLocation,\n          jobDispatch = _this$state2.jobDispatch,\n          otherLocation = _this$state2.otherLocation,\n          submitted = _this$state2.submitted,\n          loading = _this$state2.loading;\n\n    const rest = _extends({}, this.props);\n\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({\n      absolute: true,\n      fixed: true,\n      color: \"dark\",\n      brand: \"Box Tracker\",\n      rightLinks: React.createElement(HeaderLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, localStorage.getItem('customer_name')), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Add New Job\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: useStyles.root,\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'form-group' + (submitted && !customerID ? ' has-error' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"numBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Number of Boxes:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"numBoxes\",\n      value: numBoxes,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: useStyles.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"location-customized-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Location\"), React.createElement(Select, {\n      value: jobLocation,\n      onChange: this.handleChange,\n      input: React.createElement(BootstrapInput, {\n        name: \"jobLocation\",\n        id: \"location-customized-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Loading Dock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Loading Dock\"), React.createElement(MenuItem, {\n      value: \"Front Door\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Front Door\"), React.createElement(MenuItem, {\n      value: \"Staging Area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Staging Area\"))), React.createElement(FormControl, {\n      className: useStyles.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"dispatch-customized-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Dispatch\"), React.createElement(Select, {\n      value: jobDispatch,\n      onChange: this.handleChange,\n      input: React.createElement(BootstrapInput, {\n        name: \"jobDispatch\",\n        id: \"dispatch-customized-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Archive / Storage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Archive / Storage\"), React.createElement(MenuItem, {\n      value: \"Destroy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Destroy\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Create\")))));\n  }\n\n  addJob(customer_id, job_numboxes, job_location, job_dispatch) {\n    var path = \"http://localhost:52773/BoxTracker/jobs\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      },\n      body: JSON.stringify({\n        'customer_id': customer_id,\n        'job_numboxes': job_numboxes,\n        'job_location': job_location,\n        'operator_id': localStorage.getItem(\"operator_id\"),\n        'job_dispatch': job_dispatch\n      })\n    };\n    return fetch(path, requestOptions).then(this.handleResponse).then(response => {\n      if (response) {\n        alert(\"Job Successfully Created\");\n      }\n\n      return response;\n    });\n  }\n\n}\n\nexport default AddJob;","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\AddJob.jsx"],"names":["FormControl","InputBase","InputLabel","MenuItem","Select","makeStyles","withStyles","React","Header","HeaderLinks","Toolbar","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","display","flexWrap","margin","AddJob","Component","constructor","props","params","state","user","customer_name","numBoxes","jobLocation","jobDispatch","submitted","loading","handleChange","bind","handleSubmit","e","target","name","value","setState","preventDefault","customer_id","returnUrl","addJob","match","id","then","response","error","path","history","push","render","customerID","otherLocation","rest","localStorage","getItem","job_numboxes","job_location","job_dispatch","requestOptions","method","headers","body","JSON","stringify","fetch","handleResponse","alert"],"mappings":"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","sourcesContent":["import FormControl from '@material-ui/core/FormControl';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport Header from \"./../Components/Headers/Header\";\r\nimport HeaderLinks from \"./../Components/Headers/HeaderLinks\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport '../index.css';\r\nimport '../Menu.css';\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nclass AddJob extends React.Component{\r\n \r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      \r\n      this.params = {};\r\n      this.state = {\r\n          \r\n          user: {},\r\n          customer_name: '',\r\n          numBoxes:'',\r\n          jobLocation:'Loading Dock',\r\n          jobDispatch:'Archive / Storage',\r\n          submitted: false,\r\n          loading: false\r\n      };\r\n    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const { customer_id, numBoxes, jobLocation, jobDispatch, returnUrl } = this.state;\r\n  \r\n        // stop here if form is invalid\r\n        if (!(numBoxes))\r\n        {\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        \r\n        this.addJob(this.props.match.params.id, numBoxes, jobLocation, jobDispatch)\r\n        .then(\r\n            response => {\r\n                this.setState({loading: false});\r\n            },\r\n            error => this.setState({ error, loading: false })\r\n        );\r\n        var path = \"/customer/\"+this.props.match.params.id\r\n        this.props.history.push(path);\r\n    }\r\n\r\n  render(){\r\n    var path = \"/customer/\"+this.props.match.params.id\r\n    const { user, customerID, numBoxes, jobLocation, jobDispatch, otherLocation, submitted, loading } = this.state;\r\n    const { ...rest } = this.props;\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n          <Header\r\n                absolute\r\n                fixed\r\n                color=\"dark\"\r\n                brand=\"Box Tracker\"\r\n                rightLinks={<HeaderLinks />}\r\n                {...rest}\r\n            />\r\n            <Toolbar />\r\n          <header className=\"Menu-header\">\r\n            <h2>{localStorage.getItem('customer_name') }\r\n            </h2>\r\n            <p>Add New Job</p>\r\n          </header>\r\n          <div className=\"content\">\r\n          <form className={useStyles.root} autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n          <div className={'form-group' + (submitted && !customerID ? ' has-error' : '')}>\r\n              <label htmlFor=\"numBoxes\">Number of Boxes:</label><br/>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"numBoxes\"\r\n                value={numBoxes}\r\n                onChange={this.handleChange} />\r\n          </div>\r\n            <FormControl className={useStyles.margin}>\r\n              <InputLabel htmlFor=\"location-customized-select\">Location</InputLabel>\r\n              <Select\r\n                value={jobLocation}\r\n                onChange={this.handleChange}\r\n                input={<BootstrapInput name=\"jobLocation\" id=\"location-customized-select\" />}\r\n              >\r\n                <MenuItem value={\"Loading Dock\"}>Loading Dock</MenuItem>\r\n                <MenuItem value={\"Front Door\"}>Front Door</MenuItem>\r\n                <MenuItem value={\"Staging Area\"}>Staging Area</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={useStyles.margin}>\r\n              <InputLabel htmlFor=\"dispatch-customized-select\">Dispatch</InputLabel>\r\n              <Select\r\n                value={jobDispatch}\r\n                onChange={this.handleChange}\r\n                input={<BootstrapInput name=\"jobDispatch\" id=\"dispatch-customized-select\" />}\r\n              >\r\n                <MenuItem value={\"Archive / Storage\"}>Archive / Storage</MenuItem>\r\n                <MenuItem value={\"Destroy\"}>Destroy</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          <div className=\"form-group\">\r\n              <button className=\"btn btn-primary\">Create</button>\r\n          </div>\r\n          </form>\r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n\r\n    addJob(customer_id, job_numboxes, job_location, job_dispatch)\r\n    {\r\n      var path = \"http://localhost:52773/BoxTracker/jobs\"\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n                },\r\n            body: JSON.stringify({'customer_id': customer_id, 'job_numboxes': job_numboxes, 'job_location': job_location, 'operator_id':localStorage.getItem(\"operator_id\"), 'job_dispatch': job_dispatch})\r\n            };\r\n        return fetch(path, requestOptions)\r\n        .then(this.handleResponse).then(response => {\r\n                if(response)\r\n                {   \r\n                    alert(\"Job Successfully Created\")\r\n                }\r\n                return response;\r\n            }\r\n        )\r\n            \r\n    }\r\n  }\r\n  \r\n\r\nexport default AddJob;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker-React\\\\src\\\\Pages\\\\QualityControl.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTable from 'react-table';\nimport { Button, TextField } from '@material-ui/core';\nimport QCApproveDialogue from './QCApproveDialogue';\nimport QCRejectDialogue from './QCRejectDialogue';\nimport { Route, Link, HashRouter } from 'react-router-dom';\nimport \"react-table/react-table.css\";\nimport JSONTree from 'react-json-tree';\nimport '../Menu.css';\nimport '../customers.css';\nexport default class QualityControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      box: [],\n      loading: false,\n      boxID: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBox(this.props.match.params.id);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    const _this$state = this.state,\n          vBox = _this$state.vBox,\n          boxID = _this$state.boxID,\n          loading = _this$state.loading;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 40,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    var customerStyle = {\n      margin: 'auto',\n      padding: 20,\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"MenuQC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Quality Control\")), React.createElement(ReactTable, {\n      data: vBox,\n      columns: [{\n        Header: \"Box\",\n        columns: [{\n          accessor: \"Property\"\n        }, {\n          accessor: \"Value\"\n        }]\n      }],\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, (state, makeTable, instance) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, makeTable());\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(QCApproveDialogue, {\n      onClick: () => this.completeStepApprove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(QCRejectDialogue, {\n      onClick: () => this.completeStepReject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  } ///\n  /// HTTP GET/POST METHODS\n  ///\n\n\n  getBox(boxID) {\n    if (boxID == \"$36\") {\n      boxID = 6;\n    } //alert(boxID)\n    //boxID = 6\n\n\n    var path = \"http://localhost:52773/BoxTracker/boxes/\" + boxID; //TEMPORARY\n    //jobID = \"1\"\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(path, requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        //alert(JSON.stringify(response))\n        let vBox = this.getVertical(response);\n        this.setState({\n          vBox: vBox,\n          box: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  getVertical(vBox) {\n    let newBox = [];\n    vBox.map((data, i) => {\n      this.setState({\n        boxID: data.box_id\n      });\n      newBox = [{\n        \"Property\": \"Box ID\",\n        \"Value\": data.box_id\n      }, {\n        \"Property\": \"Job ID\",\n        \"Value\": data.job_id\n      }, {\n        \"Property\": \"Customer\",\n        \"Value\": data.customer_name\n      }, {\n        \"Property\": \"Location\",\n        \"Value\": data.box_location\n      }, {\n        \"Property\": \"Operator\",\n        \"Value\": data.box_operator\n      }, {\n        \"Property\": \"State\",\n        \"Value\": data.box_state\n      }, {\n        \"Property\": \"Step\",\n        \"Value\": data.box_step\n      }, {\n        \"Property\": \"Dispatch\",\n        \"Value\": data.job_dispatch\n      }];\n    });\n    return newBox;\n  }\n\n  completeStepApprove() {\n    var path = \"http://localhost:52773/BoxTracker/task\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      },\n      body: JSON.stringify({\n        'box_id': this.state.boxID,\n        'task_action': \"Approve\",\n        'box_location': \"Workstation\",\n        \"box_operator\": localStorage.getItem(\"operator_id\"),\n        \"box_step\": \"Dispatch\"\n      })\n    };\n    return fetch(path, requestOptions).then(this.handleResponse).then(response => {\n      if (response) {\n        alert(\"Accepted\");\n        var path = \"/boxes\";\n        this.props.history.push(path);\n      }\n\n      return response;\n    });\n  }\n\n  completeStepReject() {\n    var path = \"http://localhost:52773/BoxTracker/task\";\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      },\n      body: JSON.stringify({\n        'box_id': this.state.boxID,\n        'task_action': \"Reject\",\n        'box_location': \"Workstation\",\n        \"box_operator\": localStorage.getItem(\"operator_id\"),\n        \"box_step\": \"Scanning\"\n      })\n    };\n    return fetch(path, requestOptions).then(this.handleResponse).then(response => {\n      if (response) {\n        alert(\"Rejected\");\n        var path = \"/boxes\";\n        this.props.history.push(path);\n      }\n\n      return response;\n    });\n  }\n\n  handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert(\"not OK, 401\"); // auto logout if 401 response returned from api\n\n          Location.reload(true);\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}","map":{"version":3,"sources":["C:\\BoxTracker-React\\src\\Pages\\QualityControl.jsx"],"names":["React","ReactDOM","ReactTable","Button","TextField","QCApproveDialogue","QCRejectDialogue","Route","Link","HashRouter","JSONTree","QualityControl","Component","constructor","props","params","state","user","box","loading","boxID","handleChange","bind","handleSubmit","componentDidMount","getBox","match","id","e","target","name","value","setState","preventDefault","render","vBox","menuStyle","margin","padding","height","overflow","customerStyle","Header","columns","accessor","makeTable","instance","completeStepApprove","completeStepReject","path","requestOptions","method","headers","fetch","then","handleGetResponse","response","getVertical","newBox","map","data","i","box_id","job_id","customer_name","box_location","box_operator","box_state","box_step","job_dispatch","body","JSON","stringify","localStorage","getItem","handleResponse","alert","history","push","text","parse","ok","status","Location","reload","error","message","statusText","Promise","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,UAAtB,QAAuC,kBAAvC;AACA,OAAO,6BAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,aAAP;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,OAAO,EAAE,KAHA;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMF,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDE,EAAAA,iBAAiB,GACjB;AACI,SAAKC,MAAL,CAAY,KAAKX,KAAL,CAAWY,KAAX,CAAiBX,MAAjB,CAAwBY,EAApC;AACH;;AAEDN,EAAAA,YAAY,CAACO,CAAD,EACV;AAAA,sBAC4BA,CAAC,CAACC,MAD9B;AAAA,UACYC,IADZ,aACYA,IADZ;AAAA,UACkBC,KADlB,aACkBA,KADlB;AAEI,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQC;AAAV,KAAd;AACH;;AAEDR,EAAAA,YAAY,CAACK,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACK,cAAF;AAED;;AAEHC,EAAAA,MAAM,GAAE;AAAA,wBAC0B,KAAKlB,KAD/B;AAAA,UACEmB,IADF,eACEA,IADF;AAAA,UACQf,KADR,eACQA,KADR;AAAA,UACeD,OADf,eACeA,OADf;AAEN,QAAIiB,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE,EAFK;AAGf;AACCC,MAAAA,MAAM,EAAE,GAJM;AAKdC,MAAAA,QAAQ,EAAE;AALI,KAAhB;AAOA,QAAIC,aAAa,GAAG;AAChBJ,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE,EAFO;AAGhBE,MAAAA,QAAQ,EAAE;AAHM,KAApB;AAMA,WAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFA,CADJ,EAKE,oBAAC,UAAD;AACA,MAAA,IAAI,EAAEL,IADN;AAEA,MAAA,OAAO,EAAE,CACP;AACEO,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,QAAQ,EAAE;AADZ,SADO,EAIP;AACEA,UAAAA,QAAQ,EAAE;AADZ,SAJO;AAFX,OADO,CAFT;AAeA,MAAA,eAAe,EAAE,EAfjB;AAgBA,MAAA,SAAS,EAAC,qBAhBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBE,CAAC5B,KAAD,EAAQ6B,SAAR,EAAmBC,QAAnB,KAAgC;AAC9B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SAAS,EADZ,CADF;AAKD,KAxBH,CALF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE,MAAI,KAAKE,mBAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,MAAI,KAAKC,kBAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA/BF,CAFJ;AAuCC,GApFsD,CAqF3D;AACA;AACA;;;AACAvB,EAAAA,MAAM,CAACL,KAAD,EACN;AACI,QAAGA,KAAK,IAAE,KAAV,EAAgB;AAACA,MAAAA,KAAK,GAAC,CAAN;AAAQ,KAD7B,CAEI;AACA;;;AACA,QAAI6B,IAAI,GAAG,6CAA2C7B,KAAtD,CAJJ,CAKI;AACA;;AACA,UAAM8B,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAgB;AAFX;AAFU,KAAvB;AAOA,WAAOC,KAAK,CAACJ,IAAD,EAAOC,cAAP,CAAL,CACFI,IADE,CACG,KAAKC,iBADR,EAEFD,IAFE,CAEGE,QAAQ,IAAI;AACd,UAAIA,QAAJ,EAAc;AACZ;AACA,YAAIrB,IAAI,GAAG,KAAKsB,WAAL,CAAiBD,QAAjB,CAAX;AACA,aAAKxB,QAAL,CAAc;AACVG,UAAAA,IAAI,EAAGA,IADG;AAEVjB,UAAAA,GAAG,EAAGsC;AAFI,SAAd;AAID;;AACD,aAAOA,QAAP;AACH,KAZE,CAAP;AAaH;;AAEDC,EAAAA,WAAW,CAACtB,IAAD,EACX;AACI,QAAIuB,MAAM,GAAG,EAAb;AACAvB,IAAAA,IAAI,CAACwB,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AAClB,WAAK7B,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEwC,IAAI,CAACE;AAAb,OAAd;AACAJ,MAAAA,MAAM,GAAG,CACL;AAAC,oBAAY,QAAb;AACC,iBAASE,IAAI,CAACE;AADf,OADK,EAGJ;AAAC,oBAAY,QAAb;AACA,iBAASF,IAAI,CAACG;AADd,OAHI,EAKJ;AAAC,oBAAY,UAAb;AACA,iBAASH,IAAI,CAACI;AADd,OALI,EAOJ;AAAC,oBAAY,UAAb;AACA,iBAASJ,IAAI,CAACK;AADd,OAPI,EASJ;AAAC,oBAAY,UAAb;AACA,iBAASL,IAAI,CAACM;AADd,OATI,EAWJ;AAAC,oBAAY,OAAb;AACA,iBAASN,IAAI,CAACO;AADd,OAXI,EAaJ;AAAC,oBAAY,MAAb;AACA,iBAASP,IAAI,CAACQ;AADd,OAbI,EAeJ;AAAC,oBAAY,UAAb;AACA,iBAASR,IAAI,CAACS;AADd,OAfI,CAAT;AAkBH,KApBD;AAqBA,WAAOX,MAAP;AACH;;AAEDX,EAAAA,mBAAmB,GACnB;AACI,QAAIE,IAAI,GAAG,wCAAX;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAgB;AAFX,OAFU;AAMnBkB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,kBAAU,KAAKxD,KAAL,CAAWI,KAAtB;AAA6B,uBAAe,SAA5C;AAAuD,wBAAgB,aAAvE;AAAsF,wBAAgBqD,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAtG;AAA2I,oBAAW;AAAtJ,OAAf;AANa,KAAvB;AAQA,WAAOrB,KAAK,CAACJ,IAAD,EAAOC,cAAP,CAAL,CACNI,IADM,CACD,KAAKqB,cADJ,EACoBrB,IADpB,CACyBE,QAAQ,IAAI;AACpC,UAAGA,QAAH,EACA;AACEoB,QAAAA,KAAK,CAAC,UAAD,CAAL;AACA,YAAI3B,IAAI,GAAG,QAAX;AACA,aAAKnC,KAAL,CAAW+D,OAAX,CAAmBC,IAAnB,CAAwB7B,IAAxB;AACD;;AACD,aAAOO,QAAP;AACH,KATE,CAAP;AAWH;;AACDR,EAAAA,kBAAkB,GAClB;AACE,QAAIC,IAAI,GAAG,wCAAX;AACE,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAgB;AAFX,OAFU;AAMnBkB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,kBAAU,KAAKxD,KAAL,CAAWI,KAAtB;AAA6B,uBAAe,QAA5C;AAAsD,wBAAgB,aAAtE;AAAqF,wBAAgBqD,YAAY,CAACC,OAAb,CAAqB,aAArB,CAArG;AAA0I,oBAAW;AAArJ,OAAf;AANa,KAAvB;AAQA,WAAOrB,KAAK,CAACJ,IAAD,EAAOC,cAAP,CAAL,CACNI,IADM,CACD,KAAKqB,cADJ,EACoBrB,IADpB,CACyBE,QAAQ,IAAI;AACpC,UAAGA,QAAH,EACA;AACEoB,QAAAA,KAAK,CAAC,UAAD,CAAL;AACA,YAAI3B,IAAI,GAAG,QAAX;AACA,aAAKnC,KAAL,CAAW+D,OAAX,CAAmBC,IAAnB,CAAwB7B,IAAxB;AACD;;AACD,aAAOO,QAAP;AACH,KATE,CAAP;AAWH;;AAEDmB,EAAAA,cAAc,CAACnB,QAAD,EAAW;AAErB,WAAOA,QAAQ,CAACuB,IAAT,GAAgBzB,IAAhB,CAAqByB,IAAI,IAAI;AAChC,YAAMnB,IAAI,GAAGmB,IAAI,IAAIR,IAAI,CAACS,KAAL,CAAWD,IAAX,CAArB;;AACA,UAAI,CAACvB,QAAQ,CAACyB,EAAd,EAAkB;AACd,YAAIzB,QAAQ,CAAC0B,MAAT,KAAoB,GAAxB,EAA6B;AACzBN,UAAAA,KAAK,CAAC,aAAD,CAAL,CADyB,CAEzB;;AACAO,UAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AAED,cAAMC,KAAK,GAAIzB,IAAI,IAAIA,IAAI,CAAC0B,OAAd,IAA0B9B,QAAQ,CAAC+B,UAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,aAAOzB,IAAP;AACH,KAbM,CAAP;AAcH;;AAEDL,EAAAA,iBAAiB,CAACC,QAAD,EAAW;AAExB,WAAOA,QAAQ,CAACuB,IAAT,GAAgBzB,IAAhB,CAAqByB,IAAI,IAAI;AAChC,YAAMnB,IAAI,GAAGmB,IAAI,IAAIR,IAAI,CAACS,KAAL,CAAWD,IAAX,CAArB;;AACA,UAAI,CAACvB,QAAQ,CAACyB,EAAd,EAAkB;AACd,cAAMI,KAAK,GAAIzB,IAAI,IAAIA,IAAI,CAAC0B,OAAd,IAA0B9B,QAAQ,CAAC+B,UAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,aAAOzB,IAAP;AACH,KAPM,CAAP;AAQH;;AA5N0D","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTable from 'react-table';\r\nimport { Button, TextField}  from '@material-ui/core';\r\nimport QCApproveDialogue from './QCApproveDialogue';\r\nimport QCRejectDialogue from './QCRejectDialogue';\r\nimport { Route, Link, HashRouter} from 'react-router-dom';\r\nimport \"react-table/react-table.css\";\r\nimport JSONTree from 'react-json-tree'\r\nimport '../Menu.css';\r\nimport '../customers.css';\r\n\r\nexport default class QualityControl extends React.Component{\r\n  constructor(props)\r\n  {\r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          box: [],\r\n          loading: false,\r\n          boxID: \"\"\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount()\r\n  {\r\n      this.getBox(this.props.match.params.id)\r\n  }\r\n\r\n  handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      \r\n    }\r\n    \r\n  render(){\r\n    const { vBox, boxID, loading} = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 40,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    var customerStyle = {\r\n        margin: 'auto',\r\n        padding: 20,\r\n        overflow: 'auto',\r\n      };\r\n    \r\n    return (\r\n        \r\n        <div className=\"MenuQC\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>Quality Control</p>\r\n          </header>\r\n          <ReactTable \r\n          data={vBox}\r\n          columns={[\r\n            {\r\n              Header: \"Box\",\r\n              columns: [\r\n                {\r\n                  accessor: \"Property\"\r\n                },\r\n                {\r\n                  accessor: \"Value\"\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n        >\r\n           {(state, makeTable, instance) => {\r\n              return (\r\n                <div>\r\n                  {makeTable()}\r\n                </div>\r\n              )\r\n            }}\r\n          </ReactTable>\r\n          <div>\r\n              <QCApproveDialogue onClick={()=>this.completeStepApprove()}/>\r\n              <QCRejectDialogue onClick={()=>this.completeStepReject()}/>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n///\r\n/// HTTP GET/POST METHODS\r\n///\r\ngetBox(boxID)\r\n{\r\n    if(boxID==\"$36\"){boxID=6}\r\n    //alert(boxID)\r\n    //boxID = 6\r\n    var path = \"http://localhost:52773/BoxTracker/boxes/\"+boxID\r\n    //TEMPORARY\r\n    //jobID = \"1\"\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            }\r\n        };\r\n    return fetch(path, requestOptions)\r\n        .then(this.handleGetResponse)\r\n        .then(response => {\r\n            if (response) {\r\n              //alert(JSON.stringify(response))\r\n              let vBox = this.getVertical(response)\r\n              this.setState({\r\n                  vBox : vBox,\r\n                  box : response\r\n              })\r\n            }\r\n            return response;\r\n        });\r\n}\r\n\r\ngetVertical(vBox)\r\n{\r\n    let newBox = []\r\n    vBox.map((data, i) => {\r\n        this.setState({boxID: data.box_id})\r\n        newBox = [\r\n            {\"Property\": \"Box ID\",\r\n             \"Value\": data.box_id},\r\n             {\"Property\": \"Job ID\",\r\n             \"Value\": data.job_id},\r\n             {\"Property\": \"Customer\",\r\n             \"Value\": data.customer_name},\r\n             {\"Property\": \"Location\",\r\n             \"Value\": data.box_location},\r\n             {\"Property\": \"Operator\",\r\n             \"Value\": data.box_operator},\r\n             {\"Property\": \"State\",\r\n             \"Value\": data.box_state},\r\n             {\"Property\": \"Step\",\r\n             \"Value\": data.box_step},\r\n             {\"Property\": \"Dispatch\",\r\n             \"Value\": data.job_dispatch}\r\n        ]\r\n    })\r\n    return newBox\r\n}\r\n\r\ncompleteStepApprove()\r\n{\r\n    var path = \"http://localhost:52773/BoxTracker/task\"\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            },\r\n        body: JSON.stringify({'box_id': this.state.boxID, 'task_action': \"Approve\", 'box_location': \"Workstation\", \"box_operator\": localStorage.getItem(\"operator_id\"), \"box_step\":\"Dispatch\"})\r\n        };\r\n    return fetch(path, requestOptions)\r\n    .then(this.handleResponse).then(response => {\r\n            if(response)\r\n            {   \r\n              alert(\"Accepted\")\r\n              var path = \"/boxes\"\r\n              this.props.history.push(path);\r\n            }\r\n            return response;\r\n        }\r\n    )\r\n}\r\ncompleteStepReject()\r\n{\r\n  var path = \"http://localhost:52773/BoxTracker/task\"\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n            },\r\n        body: JSON.stringify({'box_id': this.state.boxID, 'task_action': \"Reject\", 'box_location': \"Workstation\", \"box_operator\": localStorage.getItem(\"operator_id\"), \"box_step\":\"Scanning\"})\r\n        };\r\n    return fetch(path, requestOptions)\r\n    .then(this.handleResponse).then(response => {\r\n            if(response)\r\n            {   \r\n              alert(\"Rejected\")\r\n              var path = \"/boxes\"\r\n              this.props.history.push(path);\r\n            }\r\n            return response;\r\n        }\r\n    )\r\n}\r\n\r\nhandleResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                alert(\"not OK, 401\")\r\n                // auto logout if 401 response returned from api\r\n                Location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nhandleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}
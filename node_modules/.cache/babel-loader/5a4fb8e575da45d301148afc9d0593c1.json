{"ast":null,"code":"var _jsxFileName = \"C:\\\\BoxTracker\\\\boxtrackerwebbapp\\\\src\\\\Pages\\\\ViewJobs.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JsonToTable } from \"react-json-to-table\";\nimport UserMenu from './UserMenu';\nimport Menu, { Item as MenuItem } from 'rc-menu';\nimport '../Menu.css';\n\nclass ViewJobs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.params = {};\n    this.state = {\n      user: {},\n      jobs: [],\n      loading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getJobs();\n  }\n\n  routeMenu() {\n    ReactDOM.render(React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    var tableWidth = '450';\n    var cellWidth = '150';\n    const jobs = this.state.jobs;\n    var menuStyle = {\n      margin: 'auto',\n      padding: 50,\n      // width: 700,\n      height: 400,\n      overflow: 'auto'\n    };\n    return React.createElement(\"div\", {\n      className: \"Menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Box Tracker\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"View Jobs\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      align: \"center\",\n      width: tableWidth,\n      border: \"1pt solid black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: cellWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Job ID\"), React.createElement(\"td\", {\n      width: cellWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(\"td\", {\n      width: cellWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Number of Boxes\")), React.createElement(Menu, {\n      style: menuStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, jobs.map((data, i) => {\n      return React.createElement(\"table\", {\n        align: \"center\",\n        width: tableWidth,\n        border: \"1pt solid black\",\n        \"overflow-y\": \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"link\",\n        width: cellWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, data.job_id), React.createElement(\"td\", {\n        classname: \"link\",\n        width: cellWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, data.customer_name), React.createElement(\"td\", {\n        className: \"link\",\n        width: cellWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, data.job_numboxes)));\n    }))));\n  }\n\n  getJobs() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': 'Basic U3VwZXJVc2VyOlBBU1M='\n      }\n    };\n    return fetch(\"http://localhost:52773/csp/BoxTracker/jobs\", requestOptions).then(this.handleGetResponse).then(response => {\n      if (response) {\n        this.setState({\n          jobs: response\n        });\n      }\n\n      return response;\n    });\n  }\n\n  handleGetResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["C:\\BoxTracker\\boxtrackerwebbapp\\src\\Pages\\ViewJobs.jsx"],"names":["React","ReactDOM","JsonToTable","UserMenu","Menu","Item","MenuItem","ViewJobs","Component","constructor","props","params","state","user","jobs","loading","handleChange","bind","componentWillMount","getJobs","routeMenu","render","document","getElementById","e","target","name","value","setState","tableWidth","cellWidth","menuStyle","margin","padding","height","overflow","map","data","i","job_id","customer_name","job_numboxes","requestOptions","method","headers","fetch","then","handleGetResponse","response","text","JSON","parse","ok","error","message","statusText","Promise","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JsonToTable } from \"react-json-to-table\";\r\nimport UserMenu from './UserMenu';\r\nimport Menu, {Item as MenuItem} from 'rc-menu';\r\nimport '../Menu.css';\r\n\r\nclass ViewJobs extends React.Component{\r\n  constructor(props)\r\n  {\r\n      \r\n      super(props);\r\n      this.params = {};\r\n      this.state = {\r\n          user: {},\r\n          jobs: [],\r\n          loading: false\r\n      };\r\n    \r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  componentWillMount()\r\n  {\r\n    this.getJobs()\r\n  }\r\n\r\n  routeMenu() {\r\n    ReactDOM.render(<UserMenu />, document.getElementById('root'))\r\n  }\r\n\r\n    handleChange(e) \r\n    {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    \r\n\r\n  render(){\r\n    var tableWidth = '450'\r\n    var cellWidth = '150'\r\n    const {jobs} = this.state\r\n    var menuStyle = {\r\n      margin: 'auto',\r\n      padding: 50,\r\n     // width: 700,\r\n      height: 400,\r\n      overflow: 'auto',\r\n    };\r\n    return (\r\n        \r\n        <div className=\"Menu\">\r\n            <header className=\"Menu-header\">\r\n            <h1>Box Tracker</h1>\r\n            <p>View Jobs</p>\r\n          </header>\r\n          <div className = 'content'>\r\n            <table align='center' width={tableWidth} border='1pt solid black'>\r\n              <td width={cellWidth}> Job ID</td>\r\n              <td width={cellWidth}>Customer Name</td>\r\n              <td width={cellWidth}> Number of Boxes</td>\r\n            </table>\r\n          <Menu style={menuStyle}>\r\n              {jobs.map((data, i) => {\r\n                  return (\r\n                    \r\n                    <table align='center' width = {tableWidth} border='1pt solid black' overflow-y='auto'>\r\n                        <tr key={i} >\r\n                            <td className='link' width={cellWidth}>{data.job_id}</td>\r\n                            <td classname='link' width={cellWidth}>{data.customer_name}</td>\r\n                            <td className='link' width={cellWidth}>{data.job_numboxes}</td>\r\n                        </tr>\r\n                    </table>\r\n                        \r\n                      \r\n                  )})\r\n                  }\r\n              \r\n              </Menu>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  getJobs()\r\n  {\r\n      const requestOptions = {\r\n          method: 'GET',\r\n          headers: {\r\n              'content-type': 'application/json',\r\n              'authorization':'Basic U3VwZXJVc2VyOlBBU1M=',\r\n              }\r\n          };\r\n      return fetch(\"http://localhost:52773/csp/BoxTracker/jobs\", requestOptions)\r\n          .then(this.handleGetResponse)\r\n          .then(response => {\r\n              if (response) {\r\n                  this.setState({\r\n                    jobs: response\r\n                  })\r\n              }\r\n              return response;\r\n          });\r\n  }\r\n\r\n  handleGetResponse(response) {\r\n    \r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\n  }\r\n  \r\n\r\nexport default ViewJobs;\r\n"]},"metadata":{},"sourceType":"module"}
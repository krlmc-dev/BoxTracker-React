import React, { Component } from 'react';
import PropTypes from 'prop-types';
import raf from 'raf';

class ScrollListItem extends Component {
  static propTypes = {
    index: PropTypes.number.isRequired,
    onRectChange: PropTypes.func.isRequired
  };

  componentDidMount() {
    this.measureHeight();
  }

  componentWillUnmount() {
    this.unmounting = true;

    raf.cancel(this.rafId);
  }

  unmounting = false;
  rafId = null;
  lastHeight = null;

  measureHeight = () => {
    if (this.unmounting || !this.element) {
      return;
    }

    const { index, onRectChange } = this.props;
    const rect = this.element.getBoundingClientRect();

    if (this.lastHeight !== rect.height) {
      onRectChange(index, rect);
    }

    this.lastHeight = rect.height;

    this.rafId = raf(this.measureHeight);
  };

  render() {
    /* eslint-disable react/prop-types */
    const { children } = this.props;
    /* eslint-enable react/prop-types */

    return (
      <div
        ref={element => {
          this.element = element;
        }}
      >
        {children}
      </div>
    );
  }
}

export default ScrollListItem;

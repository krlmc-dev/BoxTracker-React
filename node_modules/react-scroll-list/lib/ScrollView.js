'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);

var _ScrollListItem = require('./ScrollListItem');var _ScrollListItem2 = _interopRequireDefault(_ScrollListItem);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

ScrollList = function (_Component) {_inherits(ScrollList, _Component);function ScrollList() {var _ref;var _temp, _this, _ret;_classCallCheck(this, ScrollList);for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScrollList.__proto__ || Object.getPrototypeOf(ScrollList)).call.apply(_ref, [this].concat(args))), _this), _this.












    state = {
      itemsHeight: [],
      itemsTop: [],
      scrollTop: _this.props.scrollTop }, _this.












    handleScroll = function (e) {
      _this.setState({ scrollTop: e.target.scrollTop });
    }, _this.

    handleItemRectChange = function (index, rect) {var _this$props =
      _this.props,items = _this$props.items,defaultItemHeight = _this$props.defaultItemHeight;var
      itemsHeight = _this.state.itemsHeight;
      var top = 0;

      itemsHeight[index] = rect.height;

      var itemsTop = items.map(function (item, index) {
        var retTop = top;

        top += itemsHeight[index] || defaultItemHeight;

        return retTop;
      });

      _this.setState({ itemsHeight: itemsHeight, itemsTop: itemsTop });
    }, _temp), _possibleConstructorReturn(_this, _ret);}_createClass(ScrollList, [{ key: 'componentDidMount', value: function componentDidMount() {this.element.scrollTop = this.state.scrollTop;this.element.addEventListener('scroll', this.handleScroll, false);} }, { key: 'componentWillUnmount', value: function componentWillUnmount() {this.element.removeEventListener('scroll', this.handleScroll, false);} }, { key: 'renderItem', value: function renderItem(

    item, index) {var _props =
      this.props,defaultItemHeight = _props.defaultItemHeight,items = _props.items,children = _props.children;var _state =
      this.state,itemsHeight = _state.itemsHeight,itemsTop = _state.itemsTop;
      var style = {
        position: 'absolute',
        left: '0',
        height: defaultItemHeight + 'px' };


      if (itemsHeight[index]) {
        style.height = itemsHeight[index] + 'px';
      }

      if (typeof itemsTop[index] !== 'undefined') {
        style.top = itemsTop[index] + 'px';
      }

      return (
        _react2.default.createElement('div', {
            style: style,
            key: 'item' + index + '-' + itemsTop[index] + '-' + itemsHeight[index] },

          _react2.default.createElement(_ScrollListItem2.default, { index: index, onRectChange: this.handleItemRectChange },
            children(items[index]))));



    } }, { key: 'renderItems', value: function renderItems()

    {var _this2 = this;var _props2 =
      this.props,defaultItemHeight = _props2.defaultItemHeight,viewportHeight = _props2.viewportHeight,items = _props2.items;var _state2 =
      this.state,itemsHeight = _state2.itemsHeight,scrollTop = _state2.scrollTop;var _items$reduce =

      items.reduce(
      function (acc, item, index) {
        var itemHeight = itemsHeight[index] || defaultItemHeight;

        acc.height += itemHeight;

        // start index
        if (acc.height >= scrollTop && typeof acc.start === 'undefined') {
          acc.start = Math.max(index - 5, 0);
        }

        // end index
        if (
        acc.height - scrollTop > viewportHeight &&
        typeof acc.end === 'undefined')
        {
          acc.end = Math.min(index + 5, items.length - 1);
        }

        return acc;
      },
      { height: 0 }),start = _items$reduce.start,end = _items$reduce.end,height = _items$reduce.height;


      return (
        _react2.default.createElement('div', { style: { height: height + 'px', position: 'relative' } },
          items.slice(start, end).map(function (item, index) {
            return _this2.renderItem(item, index + start);
          })));


    } }, { key: 'render', value: function render()

    {var _this3 = this;var
      viewportHeight = this.props.viewportHeight;
      var style = {
        height: viewportHeight + 'px',
        overflow: 'scroll',
        zIndex: 100000 };


      return (
        _react2.default.createElement('div', {
            ref: function ref(element) {
              _this3.element = element;
            },
            style: style },

          this.renderItems()));


    } }]);return ScrollList;}(_react.Component);ScrollList.propTypes = { defaultItemHeight: _propTypes2.default.number, viewportHeight: _propTypes2.default.number.isRequired, scrollTop: _propTypes2.default.number, items: _propTypes2.default.array.isRequired };ScrollList.defaultProps = { scrollTop: 0, defaultItemHeight: 30 };exports.default =


ScrollList;
//# sourceMappingURL=ScrollView.js.map